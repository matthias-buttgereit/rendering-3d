<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="742" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="725.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="725.00"> </text><svg id="frames" x="10" width="1180" total_samples="425"><g><title>`0x7FF9F3A8A9D0 (2 samples, 0.47%)</title><rect x="0.0000%" y="677" width="0.4706%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="687.50"></text></g><g><title>`0x7FF9F3A53C56 (1 samples, 0.24%)</title><rect x="0.4706%" y="581" width="0.2353%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.7206%" y="591.50"></text></g><g><title>`0x7FF9F3A53CA8 (1 samples, 0.24%)</title><rect x="0.7059%" y="581" width="0.2353%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="1"/><text x="0.9559%" y="591.50"></text></g><g><title>`0x7FF9F3A40E7B (3 samples, 0.71%)</title><rect x="0.4706%" y="597" width="0.7059%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="3"/><text x="0.7206%" y="607.50"></text></g><g><title>`0x7FF9F3A53CC7 (1 samples, 0.24%)</title><rect x="0.9412%" y="581" width="0.2353%" height="15" fill="rgb(208,68,35)" fg:x="4" fg:w="1"/><text x="1.1912%" y="591.50"></text></g><g><title>`0x7FF9F3A40AEE (2 samples, 0.47%)</title><rect x="1.1765%" y="581" width="0.4706%" height="15" fill="rgb(232,128,0)" fg:x="5" fg:w="2"/><text x="1.4265%" y="591.50"></text></g><g><title>`0x7FF9F3A5DB41 (2 samples, 0.47%)</title><rect x="1.1765%" y="565" width="0.4706%" height="15" fill="rgb(207,160,47)" fg:x="5" fg:w="2"/><text x="1.4265%" y="575.50"></text></g><g><title>`0x7FF9F3A5A3F7 (2 samples, 0.47%)</title><rect x="1.1765%" y="549" width="0.4706%" height="15" fill="rgb(228,23,34)" fg:x="5" fg:w="2"/><text x="1.4265%" y="559.50"></text></g><g><title>`0x7FF9F3A5AC39 (2 samples, 0.47%)</title><rect x="1.1765%" y="533" width="0.4706%" height="15" fill="rgb(218,30,26)" fg:x="5" fg:w="2"/><text x="1.4265%" y="543.50"></text></g><g><title>`0x7FF9F3ACF3F4 (2 samples, 0.47%)</title><rect x="1.1765%" y="517" width="0.4706%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="2"/><text x="1.4265%" y="527.50"></text></g><g><title>`0x7FF9F3A4064C (1 samples, 0.24%)</title><rect x="1.6471%" y="565" width="0.2353%" height="15" fill="rgb(250,228,42)" fg:x="7" fg:w="1"/><text x="1.8971%" y="575.50"></text></g><g><title>`0x7FF9F3ACF2B4 (1 samples, 0.24%)</title><rect x="1.6471%" y="549" width="0.2353%" height="15" fill="rgb(240,193,28)" fg:x="7" fg:w="1"/><text x="1.8971%" y="559.50"></text></g><g><title>`0x7FF9F3A406A6 (1 samples, 0.24%)</title><rect x="1.8824%" y="565" width="0.2353%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="1"/><text x="2.1324%" y="575.50"></text></g><g><title>`0x7FF9F3ACF594 (1 samples, 0.24%)</title><rect x="1.8824%" y="549" width="0.2353%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="1"/><text x="2.1324%" y="559.50"></text></g><g><title>`0x7FF9F3A5AF36 (1 samples, 0.24%)</title><rect x="2.1176%" y="533" width="0.2353%" height="15" fill="rgb(217,207,13)" fg:x="9" fg:w="1"/><text x="2.3676%" y="543.50"></text></g><g><title>`0x7FF9F3A5B193 (1 samples, 0.24%)</title><rect x="2.1176%" y="517" width="0.2353%" height="15" fill="rgb(231,73,38)" fg:x="9" fg:w="1"/><text x="2.3676%" y="527.50"></text></g><g><title>`0x7FF9F3A65976 (9 samples, 2.12%)</title><rect x="0.4706%" y="645" width="2.1176%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="9"/><text x="0.7206%" y="655.50">`..</text></g><g><title>`0x7FF9F3A9236A (9 samples, 2.12%)</title><rect x="0.4706%" y="629" width="2.1176%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="9"/><text x="0.7206%" y="639.50">`..</text></g><g><title>`0x7FF9F3A40DBB (9 samples, 2.12%)</title><rect x="0.4706%" y="613" width="2.1176%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="9"/><text x="0.7206%" y="623.50">`..</text></g><g><title>`0x7FF9F3A40F80 (6 samples, 1.41%)</title><rect x="1.1765%" y="597" width="1.4118%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="6"/><text x="1.4265%" y="607.50"></text></g><g><title>`0x7FF9F3A40BB8 (4 samples, 0.94%)</title><rect x="1.6471%" y="581" width="0.9412%" height="15" fill="rgb(249,33,26)" fg:x="7" fg:w="4"/><text x="1.8971%" y="591.50"></text></g><g><title>`0x7FF9F3A406FF (2 samples, 0.47%)</title><rect x="2.1176%" y="565" width="0.4706%" height="15" fill="rgb(235,183,28)" fg:x="9" fg:w="2"/><text x="2.3676%" y="575.50"></text></g><g><title>`0x7FF9F3A5C389 (2 samples, 0.47%)</title><rect x="2.1176%" y="549" width="0.4706%" height="15" fill="rgb(221,5,38)" fg:x="9" fg:w="2"/><text x="2.3676%" y="559.50"></text></g><g><title>`0x7FF9F3A5AF75 (1 samples, 0.24%)</title><rect x="2.3529%" y="533" width="0.2353%" height="15" fill="rgb(247,18,42)" fg:x="10" fg:w="1"/><text x="2.6029%" y="543.50"></text></g><g><title>`0x7FF9F3A5B471 (1 samples, 0.24%)</title><rect x="2.3529%" y="517" width="0.2353%" height="15" fill="rgb(241,131,45)" fg:x="10" fg:w="1"/><text x="2.6029%" y="527.50"></text></g><g><title>`0x7FF9F3A588A6 (1 samples, 0.24%)</title><rect x="2.5882%" y="517" width="0.2353%" height="15" fill="rgb(249,31,29)" fg:x="11" fg:w="1"/><text x="2.8382%" y="527.50"></text></g><g><title>`0x7FF9F3A5DD84 (1 samples, 0.24%)</title><rect x="2.5882%" y="501" width="0.2353%" height="15" fill="rgb(225,111,53)" fg:x="11" fg:w="1"/><text x="2.8382%" y="511.50"></text></g><g><title>`0x7FF9F3A5DEAE (1 samples, 0.24%)</title><rect x="2.5882%" y="485" width="0.2353%" height="15" fill="rgb(238,160,17)" fg:x="11" fg:w="1"/><text x="2.8382%" y="495.50"></text></g><g><title>`0x7FF9F3A5DF75 (1 samples, 0.24%)</title><rect x="2.5882%" y="469" width="0.2353%" height="15" fill="rgb(214,148,48)" fg:x="11" fg:w="1"/><text x="2.8382%" y="479.50"></text></g><g><title>`0x7FF9F3A6C7AA (1 samples, 0.24%)</title><rect x="2.5882%" y="453" width="0.2353%" height="15" fill="rgb(232,36,49)" fg:x="11" fg:w="1"/><text x="2.8382%" y="463.50"></text></g><g><title>`0x7FF9F3A6D08C (1 samples, 0.24%)</title><rect x="2.5882%" y="437" width="0.2353%" height="15" fill="rgb(209,103,24)" fg:x="11" fg:w="1"/><text x="2.8382%" y="447.50"></text></g><g><title>`0x7FF9F3A4064C (1 samples, 0.24%)</title><rect x="2.8235%" y="469" width="0.2353%" height="15" fill="rgb(229,88,8)" fg:x="12" fg:w="1"/><text x="3.0735%" y="479.50"></text></g><g><title>`0x7FF9F3ACF2B4 (1 samples, 0.24%)</title><rect x="2.8235%" y="453" width="0.2353%" height="15" fill="rgb(213,181,19)" fg:x="12" fg:w="1"/><text x="3.0735%" y="463.50"></text></g><g><title>`0x7FF9F3A5C244 (1 samples, 0.24%)</title><rect x="3.0588%" y="453" width="0.2353%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="1"/><text x="3.3088%" y="463.50"></text></g><g><title>`0x7FF9F3A5C0BA (1 samples, 0.24%)</title><rect x="3.0588%" y="437" width="0.2353%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="1"/><text x="3.3088%" y="447.50"></text></g><g><title>`0x7FF9F3A5C4BC (1 samples, 0.24%)</title><rect x="3.0588%" y="421" width="0.2353%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="1"/><text x="3.3088%" y="431.50"></text></g><g><title>`0x7FF9F3ACF154 (1 samples, 0.24%)</title><rect x="3.0588%" y="405" width="0.2353%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="1"/><text x="3.3088%" y="415.50"></text></g><g><title>`0x7FF9F3A588C4 (3 samples, 0.71%)</title><rect x="2.8235%" y="517" width="0.7059%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="3"/><text x="3.0735%" y="527.50"></text></g><g><title>`0x7FF9F3A40EAF (3 samples, 0.71%)</title><rect x="2.8235%" y="501" width="0.7059%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="3"/><text x="3.0735%" y="511.50"></text></g><g><title>`0x7FF9F3A410E0 (3 samples, 0.71%)</title><rect x="2.8235%" y="485" width="0.7059%" height="15" fill="rgb(232,182,51)" fg:x="12" fg:w="3"/><text x="3.0735%" y="495.50"></text></g><g><title>`0x7FF9F3A406FF (2 samples, 0.47%)</title><rect x="3.0588%" y="469" width="0.4706%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="2"/><text x="3.3088%" y="479.50"></text></g><g><title>`0x7FF9F3A5C3E8 (1 samples, 0.24%)</title><rect x="3.2941%" y="453" width="0.2353%" height="15" fill="rgb(208,69,12)" fg:x="14" fg:w="1"/><text x="3.5441%" y="463.50"></text></g><g><title>`0x7FF9F3A54764 (1 samples, 0.24%)</title><rect x="3.2941%" y="437" width="0.2353%" height="15" fill="rgb(235,93,37)" fg:x="14" fg:w="1"/><text x="3.5441%" y="447.50"></text></g><g><title>`0x7FF9F3A53C56 (1 samples, 0.24%)</title><rect x="3.2941%" y="421" width="0.2353%" height="15" fill="rgb(213,116,39)" fg:x="14" fg:w="1"/><text x="3.5441%" y="431.50"></text></g><g><title>`0x7FF9F147BCD9 (5 samples, 1.18%)</title><rect x="2.5882%" y="629" width="1.1765%" height="15" fill="rgb(222,207,29)" fg:x="11" fg:w="5"/><text x="2.8382%" y="639.50"></text></g><g><title>`0x7FF9F147BA90 (5 samples, 1.18%)</title><rect x="2.5882%" y="613" width="1.1765%" height="15" fill="rgb(206,96,30)" fg:x="11" fg:w="5"/><text x="2.8382%" y="623.50"></text></g><g><title>`0x7FF9F1488F91 (5 samples, 1.18%)</title><rect x="2.5882%" y="597" width="1.1765%" height="15" fill="rgb(218,138,4)" fg:x="11" fg:w="5"/><text x="2.8382%" y="607.50"></text></g><g><title>`0x7FF9F1481843 (5 samples, 1.18%)</title><rect x="2.5882%" y="581" width="1.1765%" height="15" fill="rgb(250,191,14)" fg:x="11" fg:w="5"/><text x="2.8382%" y="591.50"></text></g><g><title>`0x7FF9F0FC6772 (5 samples, 1.18%)</title><rect x="2.5882%" y="565" width="1.1765%" height="15" fill="rgb(239,60,40)" fg:x="11" fg:w="5"/><text x="2.8382%" y="575.50"></text></g><g><title>`0x7FF9F3A5A24A (5 samples, 1.18%)</title><rect x="2.5882%" y="549" width="1.1765%" height="15" fill="rgb(206,27,48)" fg:x="11" fg:w="5"/><text x="2.8382%" y="559.50"></text></g><g><title>`0x7FF9F3A48C9C (5 samples, 1.18%)</title><rect x="2.5882%" y="533" width="1.1765%" height="15" fill="rgb(225,35,8)" fg:x="11" fg:w="5"/><text x="2.8382%" y="543.50"></text></g><g><title>`0x7FF9F3A58930 (1 samples, 0.24%)</title><rect x="3.5294%" y="517" width="0.2353%" height="15" fill="rgb(250,213,24)" fg:x="15" fg:w="1"/><text x="3.7794%" y="527.50"></text></g><g><title>`0x7FF9F3A5D5D1 (1 samples, 0.24%)</title><rect x="3.5294%" y="501" width="0.2353%" height="15" fill="rgb(247,123,22)" fg:x="15" fg:w="1"/><text x="3.7794%" y="511.50"></text></g><g><title>`0x7FF9F3A5E7DF (1 samples, 0.24%)</title><rect x="3.5294%" y="485" width="0.2353%" height="15" fill="rgb(231,138,38)" fg:x="15" fg:w="1"/><text x="3.7794%" y="495.50"></text></g><g><title>`0x7FF9F3A5E8BC (1 samples, 0.24%)</title><rect x="3.5294%" y="469" width="0.2353%" height="15" fill="rgb(231,145,46)" fg:x="15" fg:w="1"/><text x="3.7794%" y="479.50"></text></g><g><title>`0x7FF9F3AA3BB0 (1 samples, 0.24%)</title><rect x="3.5294%" y="453" width="0.2353%" height="15" fill="rgb(251,118,11)" fg:x="15" fg:w="1"/><text x="3.7794%" y="463.50"></text></g><g><title>`0x7FF9F3ACF5D4 (1 samples, 0.24%)</title><rect x="3.5294%" y="437" width="0.2353%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="1"/><text x="3.7794%" y="447.50"></text></g><g><title>`0x7FF9F1484EAD (1 samples, 0.24%)</title><rect x="3.7647%" y="629" width="0.2353%" height="15" fill="rgb(247,81,37)" fg:x="16" fg:w="1"/><text x="4.0147%" y="639.50"></text></g><g><title>main.exe`std::sys::windows::compat::init (1 samples, 0.24%)</title><rect x="3.7647%" y="613" width="0.2353%" height="15" fill="rgb(209,12,38)" fg:x="16" fg:w="1"/><text x="4.0147%" y="623.50"></text></g><g><title>main.exe`std::sys::windows::compat::load_synch_functions (1 samples, 0.24%)</title><rect x="3.7647%" y="597" width="0.2353%" height="15" fill="rgb(227,1,9)" fg:x="16" fg:w="1"/><text x="4.0147%" y="607.50"></text></g><g><title>main.exe`std::sys::windows::compat::load_synch_functions::try_load (1 samples, 0.24%)</title><rect x="3.7647%" y="581" width="0.2353%" height="15" fill="rgb(248,47,43)" fg:x="16" fg:w="1"/><text x="4.0147%" y="591.50"></text></g><g><title>main.exe`core::option::impl$40::branch (1 samples, 0.24%)</title><rect x="3.7647%" y="565" width="0.2353%" height="15" fill="rgb(221,10,30)" fg:x="16" fg:w="1"/><text x="4.0147%" y="575.50"></text></g><g><title>`0x7FF9F0FF18C6 (1 samples, 0.24%)</title><rect x="3.7647%" y="549" width="0.2353%" height="15" fill="rgb(210,229,1)" fg:x="16" fg:w="1"/><text x="4.0147%" y="559.50"></text></g><g><title>`0x7FF9F0FF1936 (1 samples, 0.24%)</title><rect x="3.7647%" y="533" width="0.2353%" height="15" fill="rgb(222,148,37)" fg:x="16" fg:w="1"/><text x="4.0147%" y="543.50"></text></g><g><title>`0x7FF9F3A5AB5C (1 samples, 0.24%)</title><rect x="3.7647%" y="517" width="0.2353%" height="15" fill="rgb(234,67,33)" fg:x="16" fg:w="1"/><text x="4.0147%" y="527.50"></text></g><g><title>`0x7FF9F3A59D4E (1 samples, 0.24%)</title><rect x="3.7647%" y="501" width="0.2353%" height="15" fill="rgb(247,98,35)" fg:x="16" fg:w="1"/><text x="4.0147%" y="511.50"></text></g><g><title>`0x7FF9F3A45CE6 (1 samples, 0.24%)</title><rect x="3.7647%" y="485" width="0.2353%" height="15" fill="rgb(247,138,52)" fg:x="16" fg:w="1"/><text x="4.0147%" y="495.50"></text></g><g><title>`0x7FF9F3A6AB01 (1 samples, 0.24%)</title><rect x="4.0000%" y="469" width="0.2353%" height="15" fill="rgb(213,79,30)" fg:x="17" fg:w="1"/><text x="4.2500%" y="479.50"></text></g><g><title>`0x7FF9F3A6BE34 (1 samples, 0.24%)</title><rect x="4.0000%" y="453" width="0.2353%" height="15" fill="rgb(246,177,23)" fg:x="17" fg:w="1"/><text x="4.2500%" y="463.50"></text></g><g><title>`0x7FF9F3A69C1C (1 samples, 0.24%)</title><rect x="4.0000%" y="437" width="0.2353%" height="15" fill="rgb(230,62,27)" fg:x="17" fg:w="1"/><text x="4.2500%" y="447.50"></text></g><g><title>`0x7FF9F3A765D6 (1 samples, 0.24%)</title><rect x="4.0000%" y="421" width="0.2353%" height="15" fill="rgb(216,154,8)" fg:x="17" fg:w="1"/><text x="4.2500%" y="431.50"></text></g><g><title>`0x7FF9F3ACF014 (1 samples, 0.24%)</title><rect x="4.0000%" y="405" width="0.2353%" height="15" fill="rgb(244,35,45)" fg:x="17" fg:w="1"/><text x="4.2500%" y="415.50"></text></g><g><title>main.exe`core::ptr::drop_in_place (1 samples, 0.24%)</title><rect x="4.2353%" y="469" width="0.2353%" height="15" fill="rgb(251,115,12)" fg:x="18" fg:w="1"/><text x="4.4853%" y="479.50"></text></g><g><title>main.exe`core::ptr::drop_in_place(alloc::vec::Vec (1 samples, 0.24%)</title><rect x="4.2353%" y="453" width="0.2353%" height="15" fill="rgb(240,54,50)" fg:x="18" fg:w="1"/><text x="4.4853%" y="463.50"></text></g><g><title>main.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (1 samples, 0.24%)</title><rect x="4.2353%" y="437" width="0.2353%" height="15" fill="rgb(233,84,52)" fg:x="18" fg:w="1"/><text x="4.4853%" y="447.50"></text></g><g><title>main.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (1 samples, 0.24%)</title><rect x="4.2353%" y="421" width="0.2353%" height="15" fill="rgb(207,117,47)" fg:x="18" fg:w="1"/><text x="4.4853%" y="431.50"></text></g><g><title>main.exe`alloc::raw_vec::RawVec&lt;u8,alloc::alloc::Global&gt;::current_memory (1 samples, 0.24%)</title><rect x="4.2353%" y="405" width="0.2353%" height="15" fill="rgb(249,43,39)" fg:x="18" fg:w="1"/><text x="4.4853%" y="415.50"></text></g><g><title>`0x7FF9F3A6AB01 (1 samples, 0.24%)</title><rect x="4.2353%" y="389" width="0.2353%" height="15" fill="rgb(209,38,44)" fg:x="18" fg:w="1"/><text x="4.4853%" y="399.50"></text></g><g><title>`0x7FF9F3A6BE34 (1 samples, 0.24%)</title><rect x="4.2353%" y="373" width="0.2353%" height="15" fill="rgb(236,212,23)" fg:x="18" fg:w="1"/><text x="4.4853%" y="383.50"></text></g><g><title>`0x7FF9F3A69C1C (1 samples, 0.24%)</title><rect x="4.2353%" y="357" width="0.2353%" height="15" fill="rgb(242,79,21)" fg:x="18" fg:w="1"/><text x="4.4853%" y="367.50"></text></g><g><title>`0x7FF9F3A765D6 (1 samples, 0.24%)</title><rect x="4.2353%" y="341" width="0.2353%" height="15" fill="rgb(211,96,35)" fg:x="18" fg:w="1"/><text x="4.4853%" y="351.50"></text></g><g><title>`0x7FF9F3ACF014 (1 samples, 0.24%)</title><rect x="4.2353%" y="325" width="0.2353%" height="15" fill="rgb(253,215,40)" fg:x="18" fg:w="1"/><text x="4.4853%" y="335.50"></text></g><g><title>main.exe`core::result::impl$26::branch (1 samples, 0.24%)</title><rect x="4.4706%" y="437" width="0.2353%" height="15" fill="rgb(211,81,21)" fg:x="19" fg:w="1"/><text x="4.7206%" y="447.50"></text></g><g><title>main.exe`std::io::default_read_to_string&lt;std::fs::File&gt; (1 samples, 0.24%)</title><rect x="4.4706%" y="421" width="0.2353%" height="15" fill="rgb(208,190,38)" fg:x="19" fg:w="1"/><text x="4.7206%" y="431.50"></text></g><g><title>main.exe`std::io::append_to_string (1 samples, 0.24%)</title><rect x="4.4706%" y="405" width="0.2353%" height="15" fill="rgb(235,213,38)" fg:x="19" fg:w="1"/><text x="4.7206%" y="415.50"></text></g><g><title>main.exe`std::io::default_read_to_end&lt;std::fs::File&gt; (1 samples, 0.24%)</title><rect x="4.4706%" y="389" width="0.2353%" height="15" fill="rgb(237,122,38)" fg:x="19" fg:w="1"/><text x="4.7206%" y="399.50"></text></g><g><title>main.exe`std::sys::windows::handle::Handle::read_buf (1 samples, 0.24%)</title><rect x="4.4706%" y="373" width="0.2353%" height="15" fill="rgb(244,218,35)" fg:x="19" fg:w="1"/><text x="4.7206%" y="383.50"></text></g><g><title>main.exe`std::sys::windows::handle::Handle::synchronous_read (1 samples, 0.24%)</title><rect x="4.4706%" y="357" width="0.2353%" height="15" fill="rgb(240,68,47)" fg:x="19" fg:w="1"/><text x="4.7206%" y="367.50"></text></g><g><title>`0x7FF9F3ACED14 (1 samples, 0.24%)</title><rect x="4.4706%" y="341" width="0.2353%" height="15" fill="rgb(210,16,53)" fg:x="19" fg:w="1"/><text x="4.7206%" y="351.50"></text></g><g><title>main.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt;::expect(enum2$&lt;core::result::Result&lt;alloc::string::String,std::io::error::Error&gt; &gt;, ref$ (2 samples, 0.47%)</title><rect x="4.4706%" y="469" width="0.4706%" height="15" fill="rgb(235,124,12)" fg:x="19" fg:w="2"/><text x="4.7206%" y="479.50"></text></g><g><title>main.exe`std::fs::read_to_string::inner (2 samples, 0.47%)</title><rect x="4.4706%" y="453" width="0.4706%" height="15" fill="rgb(224,169,11)" fg:x="19" fg:w="2"/><text x="4.7206%" y="463.50"></text></g><g><title>main.exe`std::fs::File::open (1 samples, 0.24%)</title><rect x="4.7059%" y="437" width="0.2353%" height="15" fill="rgb(250,166,2)" fg:x="20" fg:w="1"/><text x="4.9559%" y="447.50"></text></g><g><title>main.exe`std::fs::OpenOptions::open (1 samples, 0.24%)</title><rect x="4.7059%" y="421" width="0.2353%" height="15" fill="rgb(242,216,29)" fg:x="20" fg:w="1"/><text x="4.9559%" y="431.50"></text></g><g><title>main.exe`std::fs::OpenOptions::_open (1 samples, 0.24%)</title><rect x="4.7059%" y="405" width="0.2353%" height="15" fill="rgb(230,116,27)" fg:x="20" fg:w="1"/><text x="4.9559%" y="415.50"></text></g><g><title>main.exe`core::result::Result::map (1 samples, 0.24%)</title><rect x="4.7059%" y="389" width="0.2353%" height="15" fill="rgb(228,99,48)" fg:x="20" fg:w="1"/><text x="4.9559%" y="399.50"></text></g><g><title>main.exe`std::sys::windows::fs::File::open (1 samples, 0.24%)</title><rect x="4.7059%" y="373" width="0.2353%" height="15" fill="rgb(253,11,6)" fg:x="20" fg:w="1"/><text x="4.9559%" y="383.50"></text></g><g><title>main.exe`core::convert::impl$6::try_into (1 samples, 0.24%)</title><rect x="4.7059%" y="357" width="0.2353%" height="15" fill="rgb(247,143,39)" fg:x="20" fg:w="1"/><text x="4.9559%" y="367.50"></text></g><g><title>main.exe`std::os::windows::io::handle::impl$12::try_from (1 samples, 0.24%)</title><rect x="4.7059%" y="341" width="0.2353%" height="15" fill="rgb(236,97,10)" fg:x="20" fg:w="1"/><text x="4.9559%" y="351.50"></text></g><g><title>`0x7FF9F0FC4FFC (1 samples, 0.24%)</title><rect x="4.7059%" y="325" width="0.2353%" height="15" fill="rgb(233,208,19)" fg:x="20" fg:w="1"/><text x="4.9559%" y="335.50"></text></g><g><title>`0x7FF9F0FC5690 (1 samples, 0.24%)</title><rect x="4.7059%" y="309" width="0.2353%" height="15" fill="rgb(216,164,2)" fg:x="20" fg:w="1"/><text x="4.9559%" y="319.50"></text></g><g><title>`0x7FF9F3ACF6F4 (1 samples, 0.24%)</title><rect x="4.7059%" y="293" width="0.2353%" height="15" fill="rgb(220,129,5)" fg:x="20" fg:w="1"/><text x="4.9559%" y="303.50"></text></g><g><title>`0x7FF9F0FC43CF (1 samples, 0.24%)</title><rect x="4.9412%" y="421" width="0.2353%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="1"/><text x="5.1912%" y="431.50"></text></g><g><title>`0x7FF9F3ACEE34 (1 samples, 0.24%)</title><rect x="4.9412%" y="405" width="0.2353%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="1"/><text x="5.1912%" y="415.50"></text></g><g><title>`0x7FF9F3A6AB01 (1 samples, 0.24%)</title><rect x="5.1765%" y="421" width="0.2353%" height="15" fill="rgb(251,28,31)" fg:x="22" fg:w="1"/><text x="5.4265%" y="431.50"></text></g><g><title>`0x7FF9F3A6BE34 (1 samples, 0.24%)</title><rect x="5.1765%" y="405" width="0.2353%" height="15" fill="rgb(233,223,10)" fg:x="22" fg:w="1"/><text x="5.4265%" y="415.50"></text></g><g><title>`0x7FF9F3A69718 (1 samples, 0.24%)</title><rect x="5.1765%" y="389" width="0.2353%" height="15" fill="rgb(215,21,27)" fg:x="22" fg:w="1"/><text x="5.4265%" y="399.50"></text></g><g><title>`0x7FF9F3A74B0B (1 samples, 0.24%)</title><rect x="5.1765%" y="373" width="0.2353%" height="15" fill="rgb(232,23,21)" fg:x="22" fg:w="1"/><text x="5.4265%" y="383.50"></text></g><g><title>`0x7FF9F3A763EA (1 samples, 0.24%)</title><rect x="5.1765%" y="357" width="0.2353%" height="15" fill="rgb(244,5,23)" fg:x="22" fg:w="1"/><text x="5.4265%" y="367.50"></text></g><g><title>`0x7FF9F3A76498 (1 samples, 0.24%)</title><rect x="5.1765%" y="341" width="0.2353%" height="15" fill="rgb(226,81,46)" fg:x="22" fg:w="1"/><text x="5.4265%" y="351.50"></text></g><g><title>`0x7FF9F3A765D6 (1 samples, 0.24%)</title><rect x="5.1765%" y="325" width="0.2353%" height="15" fill="rgb(247,70,30)" fg:x="22" fg:w="1"/><text x="5.4265%" y="335.50"></text></g><g><title>`0x7FF9F3ACF014 (1 samples, 0.24%)</title><rect x="5.1765%" y="309" width="0.2353%" height="15" fill="rgb(212,68,19)" fg:x="22" fg:w="1"/><text x="5.4265%" y="319.50"></text></g><g><title>main.exe`enum2$&lt;core::result::Result&lt;png::encoder::Writer&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;,enum2$&lt;png::encoder::EncodingError&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;png::encoder::Writer&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;,enum2$&lt;png::encoder::EncodingError&gt; &gt; &gt;, image::codecs::png::impl$6::encode_inner::closure_env$0&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.24%)</title><rect x="5.4118%" y="373" width="0.2353%" height="15" fill="rgb(240,187,13)" fg:x="23" fg:w="1"/><text x="5.6618%" y="383.50"></text></g><g><title>main.exe`png::encoder::Encoder&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;::write_header&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;(png::encoder::Encoder&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.24%)</title><rect x="5.4118%" y="357" width="0.2353%" height="15" fill="rgb(223,113,26)" fg:x="23" fg:w="1"/><text x="5.6618%" y="367.50"></text></g><g><title>main.exe`png::encoder::Writer&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;::init(png::encoder::Writer&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter (1 samples, 0.24%)</title><rect x="5.4118%" y="341" width="0.2353%" height="15" fill="rgb(206,192,2)" fg:x="23" fg:w="1"/><text x="5.6618%" y="351.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (1 samples, 0.24%)</title><rect x="5.4118%" y="325" width="0.2353%" height="15" fill="rgb(241,108,4)" fg:x="23" fg:w="1"/><text x="5.6618%" y="335.50"></text></g><g><title>main.exe`png::common::Info::encode&lt;ref_mut$&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt; &gt;(std::io::buffered::bufwriter::BufWriter (1 samples, 0.24%)</title><rect x="5.4118%" y="309" width="0.2353%" height="15" fill="rgb(247,173,49)" fg:x="23" fg:w="1"/><text x="5.6618%" y="319.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (1 samples, 0.24%)</title><rect x="5.4118%" y="293" width="0.2353%" height="15" fill="rgb(224,114,35)" fg:x="23" fg:w="1"/><text x="5.6618%" y="303.50"></text></g><g><title>main.exe`png::encoder::write_chunk&lt;ref_mut$&lt;ref_mut$&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;***, png::chunk::ChunkType, ref$&lt;slice2$ (1 samples, 0.24%)</title><rect x="5.4118%" y="277" width="0.2353%" height="15" fill="rgb(245,159,27)" fg:x="23" fg:w="1"/><text x="5.6618%" y="287.50"></text></g><g><title>main.exe`core::iter::traits::iterator::impl$0::next(core::slice::iter::ChunksExact (1 samples, 0.24%)</title><rect x="8.4706%" y="309" width="0.2353%" height="15" fill="rgb(245,172,44)" fg:x="36" fg:w="1"/><text x="8.7206%" y="319.50"></text></g><g><title>main.exe`core::slice::iter::impl$89::next(core::slice::iter::ChunksExact (1 samples, 0.24%)</title><rect x="8.4706%" y="293" width="0.2353%" height="15" fill="rgb(236,23,11)" fg:x="36" fg:w="1"/><text x="8.7206%" y="303.50"></text></g><g><title>main.exe`core::num::impl$9::leading_zeros (1 samples, 0.24%)</title><rect x="8.7059%" y="309" width="0.2353%" height="15" fill="rgb(205,117,38)" fg:x="37" fg:w="1"/><text x="8.9559%" y="319.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (3 samples, 0.71%)</title><rect x="8.9412%" y="309" width="0.7059%" height="15" fill="rgb(237,72,25)" fg:x="38" fg:w="3"/><text x="9.1912%" y="319.50"></text></g><g><title>main.exe`fdeflate::compress::Compressor&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;::write_run&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt; (3 samples, 0.71%)</title><rect x="8.9412%" y="293" width="0.7059%" height="15" fill="rgb(244,70,9)" fg:x="38" fg:w="3"/><text x="9.1912%" y="303.50"></text></g><g><title>main.exe`fdeflate::compress::Compressor&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;::write_bits (2 samples, 0.47%)</title><rect x="9.1765%" y="277" width="0.4706%" height="15" fill="rgb(217,125,39)" fg:x="39" fg:w="2"/><text x="9.4265%" y="287.50"></text></g><g><title>main.exe`fdeflate::compress::Compressor&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;::write_bits (4 samples, 0.94%)</title><rect x="9.6471%" y="309" width="0.9412%" height="15" fill="rgb(235,36,10)" fg:x="41" fg:w="4"/><text x="9.8971%" y="319.50"></text></g><g><title>main.exe`std::io::Write::write_all(std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.24%)</title><rect x="10.3529%" y="293" width="0.2353%" height="15" fill="rgb(251,123,47)" fg:x="44" fg:w="1"/><text x="10.6029%" y="303.50"></text></g><g><title>main.exe`std::io::cursor::impl$8::write(std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, ref$&lt;slice2$ (1 samples, 0.24%)</title><rect x="10.3529%" y="277" width="0.2353%" height="15" fill="rgb(221,13,13)" fg:x="44" fg:w="1"/><text x="10.6029%" y="287.50"></text></g><g><title>main.exe`std::io::cursor::vec_write(unsigned long long*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, ref$&lt;slice2$ (1 samples, 0.24%)</title><rect x="10.3529%" y="261" width="0.2353%" height="15" fill="rgb(238,131,9)" fg:x="44" fg:w="1"/><text x="10.6029%" y="271.50"></text></g><g><title>main.exe`core::core_arch::x86::avx2::_mm256_add_epi32 (2 samples, 0.47%)</title><rect x="10.5882%" y="245" width="0.4706%" height="15" fill="rgb(211,50,8)" fg:x="45" fg:w="2"/><text x="10.8382%" y="255.50"></text></g><g><title>main.exe`core::core_arch::x86::avx2::_mm256_madd_epi16 (1 samples, 0.24%)</title><rect x="11.0588%" y="245" width="0.2353%" height="15" fill="rgb(245,182,24)" fg:x="47" fg:w="1"/><text x="11.3088%" y="255.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (25 samples, 5.88%)</title><rect x="5.6471%" y="341" width="5.8824%" height="15" fill="rgb(242,14,37)" fg:x="24" fg:w="25"/><text x="5.8971%" y="351.50">main.ex..</text></g><g><title>main.exe`fdeflate::compress::Compressor&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;::write_data&lt;std::io::cursor::Cursor&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;(ref$&lt;slice2$ (25 samples, 5.88%)</title><rect x="5.6471%" y="325" width="5.8824%" height="15" fill="rgb(246,228,12)" fg:x="24" fg:w="25"/><text x="5.8971%" y="335.50">main.ex..</text></g><g><title>main.exe`simd_adler32::Adler32::write(ref$&lt;slice2$ (4 samples, 0.94%)</title><rect x="10.5882%" y="309" width="0.9412%" height="15" fill="rgb(213,55,15)" fg:x="45" fg:w="4"/><text x="10.8382%" y="319.50"></text></g><g><title>main.exe`simd_adler32::imp::avx2::imp::update_imp(unsigned short, unsigned short, ref$&lt;slice2$ (4 samples, 0.94%)</title><rect x="10.5882%" y="293" width="0.9412%" height="15" fill="rgb(209,9,3)" fg:x="45" fg:w="4"/><text x="10.8382%" y="303.50"></text></g><g><title>main.exe`simd_adler32::imp::avx2::imp::update_chunk_block(unsigned int*, unsigned int*, ref$&lt;slice2$ (4 samples, 0.94%)</title><rect x="10.5882%" y="277" width="0.9412%" height="15" fill="rgb(230,59,30)" fg:x="45" fg:w="4"/><text x="10.8382%" y="287.50"></text></g><g><title>main.exe`simd_adler32::imp::avx2::imp::reduce_add_blocks(unsigned int*, unsigned int*, ref$&lt;slice2$ (4 samples, 0.94%)</title><rect x="10.5882%" y="261" width="0.9412%" height="15" fill="rgb(209,121,21)" fg:x="45" fg:w="4"/><text x="10.8382%" y="271.50"></text></g><g><title>main.exe`core::core_arch::x86::avx2::_mm256_maddubs_epi16 (1 samples, 0.24%)</title><rect x="11.2941%" y="245" width="0.2353%" height="15" fill="rgb(220,109,13)" fg:x="48" fg:w="1"/><text x="11.5441%" y="255.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (1 samples, 0.24%)</title><rect x="11.5294%" y="261" width="0.2353%" height="15" fill="rgb(232,18,1)" fg:x="49" fg:w="1"/><text x="11.7794%" y="271.50"></text></g><g><title>main.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::flush_buf&lt;std::fs::File&gt; (1 samples, 0.24%)</title><rect x="11.5294%" y="245" width="0.2353%" height="15" fill="rgb(215,41,42)" fg:x="49" fg:w="1"/><text x="11.7794%" y="255.50"></text></g><g><title>main.exe`std::sys::windows::handle::Handle::write (1 samples, 0.24%)</title><rect x="11.5294%" y="229" width="0.2353%" height="15" fill="rgb(224,123,36)" fg:x="49" fg:w="1"/><text x="11.7794%" y="239.50"></text></g><g><title>main.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.24%)</title><rect x="11.5294%" y="213" width="0.2353%" height="15" fill="rgb(240,125,3)" fg:x="49" fg:w="1"/><text x="11.7794%" y="223.50"></text></g><g><title>`0x7FF9F3ACED54 (1 samples, 0.24%)</title><rect x="11.5294%" y="197" width="0.2353%" height="15" fill="rgb(205,98,50)" fg:x="49" fg:w="1"/><text x="11.7794%" y="207.50"></text></g><g><title>main.exe`png::encoder::Writer&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;::write_zlib_encoded_idat&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;(ref$&lt;slice2$ (2 samples, 0.47%)</title><rect x="11.5294%" y="341" width="0.4706%" height="15" fill="rgb(205,185,37)" fg:x="49" fg:w="2"/><text x="11.7794%" y="351.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (2 samples, 0.47%)</title><rect x="11.5294%" y="325" width="0.4706%" height="15" fill="rgb(238,207,15)" fg:x="49" fg:w="2"/><text x="11.7794%" y="335.50"></text></g><g><title>main.exe`png::encoder::write_chunk&lt;ref_mut$&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt; &gt;(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;**, png::chunk::ChunkType, ref$&lt;slice2$ (2 samples, 0.47%)</title><rect x="11.5294%" y="309" width="0.4706%" height="15" fill="rgb(213,199,42)" fg:x="49" fg:w="2"/><text x="11.7794%" y="319.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$ (2 samples, 0.47%)</title><rect x="11.5294%" y="293" width="0.4706%" height="15" fill="rgb(235,201,11)" fg:x="49" fg:w="2"/><text x="11.7794%" y="303.50"></text></g><g><title>main.exe`std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;::write_all_cold&lt;std::fs::File&gt;(ref$&lt;slice2$ (2 samples, 0.47%)</title><rect x="11.5294%" y="277" width="0.4706%" height="15" fill="rgb(207,46,11)" fg:x="49" fg:w="2"/><text x="11.7794%" y="287.50"></text></g><g><title>main.exe`std::io::Write::write_all&lt;std::fs::File&gt;(std::fs::File*, ref$&lt;slice2$ (1 samples, 0.24%)</title><rect x="11.7647%" y="261" width="0.2353%" height="15" fill="rgb(241,35,35)" fg:x="50" fg:w="1"/><text x="12.0147%" y="271.50"></text></g><g><title>main.exe`std::sys::windows::handle::Handle::write (1 samples, 0.24%)</title><rect x="11.7647%" y="245" width="0.2353%" height="15" fill="rgb(243,32,47)" fg:x="50" fg:w="1"/><text x="12.0147%" y="255.50"></text></g><g><title>main.exe`std::sys::windows::handle::Handle::synchronous_write (1 samples, 0.24%)</title><rect x="11.7647%" y="229" width="0.2353%" height="15" fill="rgb(247,202,23)" fg:x="50" fg:w="1"/><text x="12.0147%" y="239.50"></text></g><g><title>`0x7FF9F3ACED54 (1 samples, 0.24%)</title><rect x="11.7647%" y="213" width="0.2353%" height="15" fill="rgb(219,102,11)" fg:x="50" fg:w="1"/><text x="12.0147%" y="223.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (1 samples, 0.24%)</title><rect x="17.1765%" y="277" width="0.2353%" height="15" fill="rgb(243,110,44)" fg:x="73" fg:w="1"/><text x="17.4265%" y="287.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$3::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (1 samples, 0.24%)</title><rect x="17.1765%" y="261" width="0.2353%" height="15" fill="rgb(222,74,54)" fg:x="73" fg:w="1"/><text x="17.4265%" y="271.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (1 samples, 0.24%)</title><rect x="17.1765%" y="245" width="0.2353%" height="15" fill="rgb(216,99,12)" fg:x="73" fg:w="1"/><text x="17.4265%" y="255.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$3::next(core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (1 samples, 0.24%)</title><rect x="17.1765%" y="229" width="0.2353%" height="15" fill="rgb(226,22,26)" fg:x="73" fg:w="1"/><text x="17.4265%" y="239.50"></text></g><g><title>main.exe`core::iter::traits::iterator::impl$0::next(core::slice::iter::ChunksExactMut (1 samples, 0.24%)</title><rect x="17.1765%" y="213" width="0.2353%" height="15" fill="rgb(217,163,10)" fg:x="73" fg:w="1"/><text x="17.4265%" y="223.50"></text></g><g><title>main.exe`core::slice::iter::impl$97::next(core::slice::iter::ChunksExactMut (1 samples, 0.24%)</title><rect x="17.1765%" y="197" width="0.2353%" height="15" fill="rgb(213,25,53)" fg:x="73" fg:w="1"/><text x="17.4265%" y="207.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (5 samples, 1.18%)</title><rect x="17.1765%" y="309" width="1.1765%" height="15" fill="rgb(252,105,26)" fg:x="73" fg:w="5"/><text x="17.4265%" y="319.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$3::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (5 samples, 1.18%)</title><rect x="17.1765%" y="293" width="1.1765%" height="15" fill="rgb(220,39,43)" fg:x="73" fg:w="5"/><text x="17.4265%" y="303.50"></text></g><g><title>main.exe`core::iter::traits::iterator::impl$0::next(core::slice::iter::ChunksExact (4 samples, 0.94%)</title><rect x="17.4118%" y="277" width="0.9412%" height="15" fill="rgb(229,68,48)" fg:x="74" fg:w="4"/><text x="17.6618%" y="287.50"></text></g><g><title>main.exe`core::slice::iter::impl$89::next(core::slice::iter::ChunksExact (4 samples, 0.94%)</title><rect x="17.4118%" y="261" width="0.9412%" height="15" fill="rgb(252,8,32)" fg:x="74" fg:w="4"/><text x="17.6618%" y="271.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (2 samples, 0.47%)</title><rect x="18.3529%" y="309" width="0.4706%" height="15" fill="rgb(223,20,43)" fg:x="78" fg:w="2"/><text x="18.6029%" y="319.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$3::next(core::iter::adapters::zip::Zip&lt;core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact&lt;u8&gt; &gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (2 samples, 0.47%)</title><rect x="18.3529%" y="293" width="0.4706%" height="15" fill="rgb(229,81,49)" fg:x="78" fg:w="2"/><text x="18.6029%" y="303.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$1::next(core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (2 samples, 0.47%)</title><rect x="18.3529%" y="277" width="0.4706%" height="15" fill="rgb(236,28,36)" fg:x="78" fg:w="2"/><text x="18.6029%" y="287.50"></text></g><g><title>main.exe`core::iter::adapters::zip::impl$3::next(core::iter::adapters::zip::Zip&lt;ref_mut$&lt;core::slice::iter::ChunksExactMut&lt;u8&gt; &gt;,ref_mut$&lt;core::slice::iter::ChunksExact (2 samples, 0.47%)</title><rect x="18.3529%" y="261" width="0.4706%" height="15" fill="rgb(249,185,26)" fg:x="78" fg:w="2"/><text x="18.6029%" y="271.50"></text></g><g><title>main.exe`core::iter::traits::iterator::impl$0::next(core::slice::iter::ChunksExactMut (2 samples, 0.47%)</title><rect x="18.3529%" y="245" width="0.4706%" height="15" fill="rgb(249,174,33)" fg:x="78" fg:w="2"/><text x="18.6029%" y="255.50"></text></g><g><title>main.exe`core::slice::iter::impl$97::next(core::slice::iter::ChunksExactMut (2 samples, 0.47%)</title><rect x="18.3529%" y="229" width="0.4706%" height="15" fill="rgb(233,201,37)" fg:x="78" fg:w="2"/><text x="18.6029%" y="239.50"></text></g><g><title>main.exe`core::num::impl$6::wrapping_sub (3 samples, 0.71%)</title><rect x="18.8235%" y="309" width="0.7059%" height="15" fill="rgb(221,78,26)" fg:x="80" fg:w="3"/><text x="19.0735%" y="319.50"></text></g><g><title>main.exe`png::filter::filter_internal(png::filter::FilterType, unsigned long long, unsigned long long, ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (40 samples, 9.41%)</title><rect x="12.0000%" y="325" width="9.4118%" height="15" fill="rgb(250,127,30)" fg:x="51" fg:w="40"/><text x="12.2500%" y="335.50">main.exe`png:..</text></g><g><title>main.exe`png::filter::filter_paeth (8 samples, 1.88%)</title><rect x="19.5294%" y="309" width="1.8824%" height="15" fill="rgb(230,49,44)" fg:x="83" fg:w="8"/><text x="19.7794%" y="319.50">m..</text></g><g><title>main.exe`core::num::impl$0::unsigned_abs (1 samples, 0.24%)</title><rect x="22.5882%" y="309" width="0.2353%" height="15" fill="rgb(229,67,23)" fg:x="96" fg:w="1"/><text x="22.8382%" y="319.50"></text></g><g><title>main.exe`core::num::impl$0::wrapping_abs (1 samples, 0.24%)</title><rect x="22.5882%" y="293" width="0.2353%" height="15" fill="rgb(249,83,47)" fg:x="96" fg:w="1"/><text x="22.8382%" y="303.50"></text></g><g><title>main.exe`image::io::free_functions::write_buffer_impl(std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt;*, ref$&lt;slice2$&lt;u8&gt; &gt;, unsigned int, unsigned int, image::color::ColorType, enum2$ (86 samples, 20.24%)</title><rect x="5.4118%" y="421" width="20.2353%" height="15" fill="rgb(215,43,3)" fg:x="23" fg:w="86"/><text x="5.6618%" y="431.50">main.exe`image::io::free_functio..</text></g><g><title>main.exe`image::codecs::png::impl$7::write_image&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;(image::codecs::png::PngEncoder&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;, ref$&lt;slice2$ (86 samples, 20.24%)</title><rect x="5.4118%" y="405" width="20.2353%" height="15" fill="rgb(238,154,13)" fg:x="23" fg:w="86"/><text x="5.6618%" y="415.50">main.exe`image::codecs::png::imp..</text></g><g><title>main.exe`image::codecs::png::PngEncoder&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;::encode_inner&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;(image::codecs::png::PngEncoder&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;, ref$&lt;slice2$ (86 samples, 20.24%)</title><rect x="5.4118%" y="389" width="20.2353%" height="15" fill="rgb(219,56,2)" fg:x="23" fg:w="86"/><text x="5.6618%" y="399.50">main.exe`image::codecs::png::Png..</text></g><g><title>main.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;png::encoder::EncodingError&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;png::encoder::EncodingError&gt; &gt; &gt;, image::codecs::png::impl$6::encode_inner::closure_env$1&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter (85 samples, 20.00%)</title><rect x="5.6471%" y="373" width="20.0000%" height="15" fill="rgb(233,0,4)" fg:x="24" fg:w="85"/><text x="5.8971%" y="383.50">main.exe`enum2$&lt;core::result::R..</text></g><g><title>main.exe`png::encoder::Writer&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;::write_image_data&lt;ref_mut$&lt;std::io::buffered::bufwriter::BufWriter&lt;std::fs::File&gt; &gt; &gt;(ref$&lt;slice2$ (85 samples, 20.00%)</title><rect x="5.6471%" y="357" width="20.0000%" height="15" fill="rgb(235,30,7)" fg:x="24" fg:w="85"/><text x="5.8971%" y="367.50">main.exe`png::encoder::Writer&lt;r..</text></g><g><title>main.exe`png::filter::filter(png::filter::FilterType, png::filter::AdaptiveFilterType, png::common::BytesPerPixel, ref$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (58 samples, 13.65%)</title><rect x="12.0000%" y="341" width="13.6471%" height="15" fill="rgb(250,79,13)" fg:x="51" fg:w="58"/><text x="12.2500%" y="351.50">main.exe`png::filter:..</text></g><g><title>main.exe`png::filter::sum_buffer(ref$&lt;slice2$ (18 samples, 4.24%)</title><rect x="21.4118%" y="325" width="4.2353%" height="15" fill="rgb(211,146,34)" fg:x="91" fg:w="18"/><text x="21.6618%" y="335.50">main...</text></g><g><title>main.exe`core::num::impl$9::saturating_add (12 samples, 2.82%)</title><rect x="22.8235%" y="309" width="2.8235%" height="15" fill="rgb(228,22,38)" fg:x="97" fg:w="12"/><text x="23.0735%" y="319.50">ma..</text></g><g><title>main.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;image::error::ImageError&gt; &gt; &gt;::expect(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;image::error::ImageError&gt; &gt; &gt;, ref$ (92 samples, 21.65%)</title><rect x="4.9412%" y="469" width="21.6471%" height="15" fill="rgb(235,168,5)" fg:x="21" fg:w="92"/><text x="5.1912%" y="479.50">main.exe`enum2$&lt;core::result::Resu..</text></g><g><title>main.exe`image::io::free_functions::save_buffer_impl(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (92 samples, 21.65%)</title><rect x="4.9412%" y="453" width="21.6471%" height="15" fill="rgb(221,155,16)" fg:x="21" fg:w="92"/><text x="5.1912%" y="463.50">main.exe`image::io::free_functions..</text></g><g><title>main.exe`image::io::free_functions::save_buffer_with_format_impl(ref$&lt;std::path::Path&gt;, ref$&lt;slice2$ (92 samples, 21.65%)</title><rect x="4.9412%" y="437" width="21.6471%" height="15" fill="rgb(215,215,53)" fg:x="21" fg:w="92"/><text x="5.1912%" y="447.50">main.exe`image::io::free_functions..</text></g><g><title>main.exe`std::fs::File::create(ref$ (4 samples, 0.94%)</title><rect x="25.6471%" y="421" width="0.9412%" height="15" fill="rgb(223,4,10)" fg:x="109" fg:w="4"/><text x="25.8971%" y="431.50"></text></g><g><title>main.exe`std::fs::OpenOptions::open(ref$ (4 samples, 0.94%)</title><rect x="25.6471%" y="405" width="0.9412%" height="15" fill="rgb(234,103,6)" fg:x="109" fg:w="4"/><text x="25.8971%" y="415.50"></text></g><g><title>main.exe`std::sys::windows::fs::File::open (4 samples, 0.94%)</title><rect x="25.6471%" y="389" width="0.9412%" height="15" fill="rgb(227,97,0)" fg:x="109" fg:w="4"/><text x="25.8971%" y="399.50"></text></g><g><title>main.exe`core::convert::impl$6::try_into (4 samples, 0.94%)</title><rect x="25.6471%" y="373" width="0.9412%" height="15" fill="rgb(234,150,53)" fg:x="109" fg:w="4"/><text x="25.8971%" y="383.50"></text></g><g><title>main.exe`std::os::windows::io::handle::impl$12::try_from (4 samples, 0.94%)</title><rect x="25.6471%" y="357" width="0.9412%" height="15" fill="rgb(228,201,54)" fg:x="109" fg:w="4"/><text x="25.8971%" y="367.50"></text></g><g><title>`0x7FF9F0FC4FFC (4 samples, 0.94%)</title><rect x="25.6471%" y="341" width="0.9412%" height="15" fill="rgb(222,22,37)" fg:x="109" fg:w="4"/><text x="25.8971%" y="351.50"></text></g><g><title>`0x7FF9F0FC5690 (4 samples, 0.94%)</title><rect x="25.6471%" y="325" width="0.9412%" height="15" fill="rgb(237,53,32)" fg:x="109" fg:w="4"/><text x="25.8971%" y="335.50"></text></g><g><title>`0x7FF9F3ACF6F4 (4 samples, 0.94%)</title><rect x="25.6471%" y="309" width="0.9412%" height="15" fill="rgb(233,25,53)" fg:x="109" fg:w="4"/><text x="25.8971%" y="319.50"></text></g><g><title>main.exe`core::cmp::impls::impl$60::lt (7 samples, 1.65%)</title><rect x="27.0588%" y="373" width="1.6471%" height="15" fill="rgb(210,40,34)" fg:x="115" fg:w="7"/><text x="27.3088%" y="383.50"></text></g><g><title>main.exe`core::iter::range::impl$3::next(core::ops::range::Range (10 samples, 2.35%)</title><rect x="26.5882%" y="405" width="2.3529%" height="15" fill="rgb(241,220,44)" fg:x="113" fg:w="10"/><text x="26.8382%" y="415.50">m..</text></g><g><title>main.exe`core::iter::range::impl$2::spec_next(core::ops::range::Range (10 samples, 2.35%)</title><rect x="26.5882%" y="389" width="2.3529%" height="15" fill="rgb(235,28,35)" fg:x="113" fg:w="10"/><text x="26.8382%" y="399.50">m..</text></g><g><title>main.exe`core::iter::range::impl$33::forward_unchecked (1 samples, 0.24%)</title><rect x="28.7059%" y="373" width="0.2353%" height="15" fill="rgb(210,56,17)" fg:x="122" fg:w="1"/><text x="28.9559%" y="383.50"></text></g><g><title>main.exe`core::num::impl$8::unchecked_add (1 samples, 0.24%)</title><rect x="28.7059%" y="357" width="0.2353%" height="15" fill="rgb(224,130,29)" fg:x="122" fg:w="1"/><text x="28.9559%" y="367.50"></text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::put_pixel(unsigned int, unsigned int, image::color::Rgb (40 samples, 9.41%)</title><rect x="28.9412%" y="405" width="9.4118%" height="15" fill="rgb(235,212,8)" fg:x="123" fg:w="40"/><text x="29.1912%" y="415.50">main.exe`imag..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::get_pixel_mut (12 samples, 2.82%)</title><rect x="35.5294%" y="389" width="2.8235%" height="15" fill="rgb(223,33,50)" fg:x="151" fg:w="12"/><text x="35.7794%" y="399.50">ma..</text></g><g><title>main.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (12 samples, 2.82%)</title><rect x="35.5294%" y="373" width="2.8235%" height="15" fill="rgb(219,149,13)" fg:x="151" fg:w="12"/><text x="35.7794%" y="383.50">ma..</text></g><g><title>main.exe`core::slice::index::impl$4::index_mut(core::ops::range::Range&lt;usize&gt;, ref_mut$&lt;slice2$ (12 samples, 2.82%)</title><rect x="35.5294%" y="357" width="2.8235%" height="15" fill="rgb(250,156,29)" fg:x="151" fg:w="12"/><text x="35.7794%" y="367.50">ma..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::save(ref$ (69 samples, 16.24%)</title><rect x="26.5882%" y="469" width="16.2353%" height="15" fill="rgb(216,193,19)" fg:x="113" fg:w="69"/><text x="26.8382%" y="479.50">main.exe`image::buffer_::..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::inner_pixels (69 samples, 16.24%)</title><rect x="26.5882%" y="453" width="16.2353%" height="15" fill="rgb(216,135,14)" fg:x="113" fg:w="69"/><text x="26.8382%" y="463.50">main.exe`image::buffer_::..</text></g><g><title>main.exe`image::imageops::affine::flip_vertical&lt;image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt; &gt;(image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec (69 samples, 16.24%)</title><rect x="26.5882%" y="437" width="16.2353%" height="15" fill="rgb(241,47,5)" fg:x="113" fg:w="69"/><text x="26.8382%" y="447.50">main.exe`image::imageops:..</text></g><g><title>main.exe`image::imageops::affine::flip_vertical_in(image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;*, image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec (69 samples, 16.24%)</title><rect x="26.5882%" y="421" width="16.2353%" height="15" fill="rgb(233,42,35)" fg:x="113" fg:w="69"/><text x="26.8382%" y="431.50">main.exe`image::imageops:..</text></g><g><title>main.exe`image::buffer_::impl$45::get_pixel(image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec (19 samples, 4.47%)</title><rect x="38.3529%" y="405" width="4.4706%" height="15" fill="rgb(231,13,6)" fg:x="163" fg:w="19"/><text x="38.6029%" y="415.50">main...</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::get_pixel (19 samples, 4.47%)</title><rect x="38.3529%" y="389" width="4.4706%" height="15" fill="rgb(207,181,40)" fg:x="163" fg:w="19"/><text x="38.6029%" y="399.50">main...</text></g><g><title>main.exe`core::slice::index::impl$0::index(ref$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (19 samples, 4.47%)</title><rect x="38.3529%" y="373" width="4.4706%" height="15" fill="rgb(254,173,49)" fg:x="163" fg:w="19"/><text x="38.6029%" y="383.50">main...</text></g><g><title>main.exe`core::slice::index::impl$4::index(core::ops::range::Range&lt;usize&gt;, ref$&lt;slice2$ (19 samples, 4.47%)</title><rect x="38.3529%" y="357" width="4.4706%" height="15" fill="rgb(221,1,38)" fg:x="163" fg:w="19"/><text x="38.6029%" y="367.50">main...</text></g><g><title>main.exe`core::cmp::impls::impl$60::lt (2 samples, 0.47%)</title><rect x="46.8235%" y="405" width="0.4706%" height="15" fill="rgb(206,124,46)" fg:x="199" fg:w="2"/><text x="47.0735%" y="415.50"></text></g><g><title>main.exe`core::iter::range::impl$12::next(core::ops::range::RangeInclusive (25 samples, 5.88%)</title><rect x="42.8235%" y="437" width="5.8824%" height="15" fill="rgb(249,21,11)" fg:x="182" fg:w="25"/><text x="43.0735%" y="447.50">main.ex..</text></g><g><title>main.exe`core::iter::range::impl$11::spec_next(core::ops::range::RangeInclusive (25 samples, 5.88%)</title><rect x="42.8235%" y="421" width="5.8824%" height="15" fill="rgb(222,201,40)" fg:x="182" fg:w="25"/><text x="43.0735%" y="431.50">main.ex..</text></g><g><title>main.exe`core::ops::range::RangeInclusive&lt;u32&gt;::is_empty (6 samples, 1.41%)</title><rect x="47.2941%" y="405" width="1.4118%" height="15" fill="rgb(235,61,29)" fg:x="201" fg:w="6"/><text x="47.5441%" y="415.50"></text></g><g><title>main.exe`core::slice::index::impl$1::index_mut(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, core::ops::range::Range (14 samples, 3.29%)</title><rect x="56.2353%" y="405" width="3.2941%" height="15" fill="rgb(219,207,3)" fg:x="239" fg:w="14"/><text x="56.4853%" y="415.50">mai..</text></g><g><title>main.exe`core::slice::index::impl$4::index_mut(core::ops::range::Range&lt;usize&gt;, ref_mut$&lt;slice2$ (14 samples, 3.29%)</title><rect x="56.2353%" y="389" width="3.2941%" height="15" fill="rgb(222,56,46)" fg:x="239" fg:w="14"/><text x="56.4853%" y="399.50">mai..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::put_pixel(unsigned int, unsigned int, image::color::Rgb (58 samples, 13.65%)</title><rect x="48.7059%" y="437" width="13.6471%" height="15" fill="rgb(239,76,54)" fg:x="207" fg:w="58"/><text x="48.9559%" y="447.50">main.exe`image::buffe..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::get_pixel_mut (26 samples, 6.12%)</title><rect x="56.2353%" y="421" width="6.1176%" height="15" fill="rgb(231,124,27)" fg:x="239" fg:w="26"/><text x="56.4853%" y="431.50">main.exe..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::pixel_indices (12 samples, 2.82%)</title><rect x="59.5294%" y="405" width="2.8235%" height="15" fill="rgb(249,195,6)" fg:x="253" fg:w="12"/><text x="59.7794%" y="415.50">ma..</text></g><g><title>main.exe`image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt; &gt;::pixel_indices_unchecked (1 samples, 0.24%)</title><rect x="62.1176%" y="389" width="0.2353%" height="15" fill="rgb(237,174,47)" fg:x="264" fg:w="1"/><text x="62.3676%" y="399.50"></text></g><g><title>main.exe`rendering_3d::draw_object(rendering_3d::wavefront::WavefrontObject, image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec (189 samples, 44.47%)</title><rect x="42.8235%" y="469" width="44.4706%" height="15" fill="rgb(206,201,31)" fg:x="182" fg:w="189"/><text x="43.0735%" y="479.50">main.exe`rendering_3d::draw_object(rendering_3d::wavefront::WavefrontObje..</text></g><g><title>main.exe`rendering_3d::draw_triangle(image::buffer_::ImageBuffer&lt;image::color::Rgb&lt;u8&gt;,alloc::vec::Vec (189 samples, 44.47%)</title><rect x="42.8235%" y="453" width="44.4706%" height="15" fill="rgb(231,57,52)" fg:x="182" fg:w="189"/><text x="43.0735%" y="463.50">main.exe`rendering_3d::draw_triangle(image::buffer_::ImageBuffer&lt;image::c..</text></g><g><title>main.exe`rendering_3d::Triangle::contains(tuple$ (106 samples, 24.94%)</title><rect x="62.3529%" y="437" width="24.9412%" height="15" fill="rgb(248,177,22)" fg:x="265" fg:w="106"/><text x="62.6029%" y="447.50">main.exe`rendering_3d::Triangle::contain..</text></g><g><title>`0x7FF9F3A6AB01 (1 samples, 0.24%)</title><rect x="87.2941%" y="453" width="0.2353%" height="15" fill="rgb(215,211,37)" fg:x="371" fg:w="1"/><text x="87.5441%" y="463.50"></text></g><g><title>`0x7FF9F3A6BE34 (1 samples, 0.24%)</title><rect x="87.2941%" y="437" width="0.2353%" height="15" fill="rgb(241,128,51)" fg:x="371" fg:w="1"/><text x="87.5441%" y="447.50"></text></g><g><title>`0x7FF9F3A69718 (1 samples, 0.24%)</title><rect x="87.2941%" y="421" width="0.2353%" height="15" fill="rgb(227,165,31)" fg:x="371" fg:w="1"/><text x="87.5441%" y="431.50"></text></g><g><title>`0x7FF9F3A74B0B (1 samples, 0.24%)</title><rect x="87.2941%" y="405" width="0.2353%" height="15" fill="rgb(228,167,24)" fg:x="371" fg:w="1"/><text x="87.5441%" y="415.50"></text></g><g><title>`0x7FF9F3A763EA (1 samples, 0.24%)</title><rect x="87.2941%" y="389" width="0.2353%" height="15" fill="rgb(228,143,12)" fg:x="371" fg:w="1"/><text x="87.5441%" y="399.50"></text></g><g><title>`0x7FF9F3A76498 (1 samples, 0.24%)</title><rect x="87.2941%" y="373" width="0.2353%" height="15" fill="rgb(249,149,8)" fg:x="371" fg:w="1"/><text x="87.5441%" y="383.50"></text></g><g><title>`0x7FF9F3A765D6 (1 samples, 0.24%)</title><rect x="87.2941%" y="357" width="0.2353%" height="15" fill="rgb(243,35,44)" fg:x="371" fg:w="1"/><text x="87.5441%" y="367.50"></text></g><g><title>`0x7FF9F3ACF014 (1 samples, 0.24%)</title><rect x="87.2941%" y="341" width="0.2353%" height="15" fill="rgb(246,89,9)" fg:x="371" fg:w="1"/><text x="87.5441%" y="351.50"></text></g><g><title>main.exe`alloc::vec::Vec&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3,1&gt; &gt;,alloc::alloc::Global&gt;::push(nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage (1 samples, 0.24%)</title><rect x="87.5294%" y="453" width="0.2353%" height="15" fill="rgb(233,213,13)" fg:x="372" fg:w="1"/><text x="87.7794%" y="463.50"></text></g><g><title>main.exe`alloc::raw_vec::RawVec&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3,1&gt; &gt;,alloc::alloc::Global&gt;::reserve_for_push&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3,1&gt; &gt;,alloc::alloc::Global&gt; (1 samples, 0.24%)</title><rect x="87.5294%" y="437" width="0.2353%" height="15" fill="rgb(233,141,41)" fg:x="372" fg:w="1"/><text x="87.7794%" y="447.50"></text></g><g><title>main.exe`alloc::raw_vec::RawVec&lt;nalgebra::base::matrix::Matrix&lt;f32,nalgebra::base::dimension::Const&lt;3&gt;,nalgebra::base::dimension::Const&lt;1&gt;,nalgebra::base::array_storage::ArrayStorage&lt;f32,3,1&gt; &gt;,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.24%)</title><rect x="87.5294%" y="421" width="0.2353%" height="15" fill="rgb(239,167,4)" fg:x="372" fg:w="1"/><text x="87.7794%" y="431.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.24%)</title><rect x="87.5294%" y="405" width="0.2353%" height="15" fill="rgb(209,217,16)" fg:x="372" fg:w="1"/><text x="87.7794%" y="415.50"></text></g><g><title>main.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.24%)</title><rect x="87.5294%" y="389" width="0.2353%" height="15" fill="rgb(219,88,35)" fg:x="372" fg:w="1"/><text x="87.7794%" y="399.50"></text></g><g><title>main.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.24%)</title><rect x="87.5294%" y="373" width="0.2353%" height="15" fill="rgb(220,193,23)" fg:x="372" fg:w="1"/><text x="87.7794%" y="383.50"></text></g><g><title>`0x7FF9F3A71C9A (1 samples, 0.24%)</title><rect x="87.5294%" y="357" width="0.2353%" height="15" fill="rgb(230,90,52)" fg:x="372" fg:w="1"/><text x="87.7794%" y="367.50"></text></g><g><title>`0x7FF9F3A71DD7 (1 samples, 0.24%)</title><rect x="87.5294%" y="341" width="0.2353%" height="15" fill="rgb(252,106,19)" fg:x="372" fg:w="1"/><text x="87.7794%" y="351.50"></text></g><g><title>`0x7FF9F3A72250 (1 samples, 0.24%)</title><rect x="87.5294%" y="325" width="0.2353%" height="15" fill="rgb(206,74,20)" fg:x="372" fg:w="1"/><text x="87.7794%" y="335.50"></text></g><g><title>`0x7FF9F3A73BD9 (1 samples, 0.24%)</title><rect x="87.5294%" y="309" width="0.2353%" height="15" fill="rgb(230,138,44)" fg:x="372" fg:w="1"/><text x="87.7794%" y="319.50"></text></g><g><title>`0x7FF9F3A73F1C (1 samples, 0.24%)</title><rect x="87.5294%" y="293" width="0.2353%" height="15" fill="rgb(235,182,43)" fg:x="372" fg:w="1"/><text x="87.7794%" y="303.50"></text></g><g><title>`0x7FF9F3A7483B (1 samples, 0.24%)</title><rect x="87.5294%" y="277" width="0.2353%" height="15" fill="rgb(242,16,51)" fg:x="372" fg:w="1"/><text x="87.7794%" y="287.50"></text></g><g><title>main.exe`alloc::vec::Vec&lt;rendering_3d::wavefront::Face,alloc::alloc::Global&gt;::push (1 samples, 0.24%)</title><rect x="87.7647%" y="453" width="0.2353%" height="15" fill="rgb(248,9,4)" fg:x="373" fg:w="1"/><text x="88.0147%" y="463.50"></text></g><g><title>main.exe`alloc::raw_vec::RawVec&lt;rendering_3d::wavefront::Face,alloc::alloc::Global&gt;::reserve_for_push&lt;rendering_3d::wavefront::Face,alloc::alloc::Global&gt; (1 samples, 0.24%)</title><rect x="87.7647%" y="437" width="0.2353%" height="15" fill="rgb(210,31,22)" fg:x="373" fg:w="1"/><text x="88.0147%" y="447.50"></text></g><g><title>main.exe`alloc::raw_vec::RawVec&lt;rendering_3d::wavefront::Face,alloc::alloc::Global&gt;::grow_amortized (1 samples, 0.24%)</title><rect x="87.7647%" y="421" width="0.2353%" height="15" fill="rgb(239,54,39)" fg:x="373" fg:w="1"/><text x="88.0147%" y="431.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (1 samples, 0.24%)</title><rect x="87.7647%" y="405" width="0.2353%" height="15" fill="rgb(230,99,41)" fg:x="373" fg:w="1"/><text x="88.0147%" y="415.50"></text></g><g><title>main.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(enum2$&lt;core::result::Result&lt;core::alloc::layout::Layout,core::alloc::layout::LayoutError&gt; &gt;, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (1 samples, 0.24%)</title><rect x="87.7647%" y="389" width="0.2353%" height="15" fill="rgb(253,106,12)" fg:x="373" fg:w="1"/><text x="88.0147%" y="399.50"></text></g><g><title>main.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$1 (1 samples, 0.24%)</title><rect x="87.7647%" y="373" width="0.2353%" height="15" fill="rgb(213,46,41)" fg:x="373" fg:w="1"/><text x="88.0147%" y="383.50"></text></g><g><title>`0x7FF9F3A71C9A (1 samples, 0.24%)</title><rect x="87.7647%" y="357" width="0.2353%" height="15" fill="rgb(215,133,35)" fg:x="373" fg:w="1"/><text x="88.0147%" y="367.50"></text></g><g><title>`0x7FF9F3A71DD7 (1 samples, 0.24%)</title><rect x="87.7647%" y="341" width="0.2353%" height="15" fill="rgb(213,28,5)" fg:x="373" fg:w="1"/><text x="88.0147%" y="351.50"></text></g><g><title>`0x7FF9F3A7260E (1 samples, 0.24%)</title><rect x="87.7647%" y="325" width="0.2353%" height="15" fill="rgb(215,77,49)" fg:x="373" fg:w="1"/><text x="88.0147%" y="335.50"></text></g><g><title>`0x7FF9F3AD58E2 (1 samples, 0.24%)</title><rect x="87.7647%" y="309" width="0.2353%" height="15" fill="rgb(248,100,22)" fg:x="373" fg:w="1"/><text x="88.0147%" y="319.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="88.0000%" y="437" width="0.2353%" height="15" fill="rgb(208,67,9)" fg:x="374" fg:w="1"/><text x="88.2500%" y="447.50"></text></g><g><title>main.exe`core::num::impl$7::checked_mul (2 samples, 0.47%)</title><rect x="88.2353%" y="405" width="0.4706%" height="15" fill="rgb(219,133,21)" fg:x="375" fg:w="2"/><text x="88.4853%" y="415.50"></text></g><g><title>main.exe`nom::character::complete::u16::closure$0(nom::character::complete::u16::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="88.4706%" y="389" width="0.2353%" height="15" fill="rgb(246,46,29)" fg:x="376" fg:w="1"/><text x="88.7206%" y="399.50"></text></g><g><title>main.exe`core::num::impl$7::checked_add (1 samples, 0.24%)</title><rect x="88.4706%" y="373" width="0.2353%" height="15" fill="rgb(246,185,52)" fg:x="376" fg:w="1"/><text x="88.7206%" y="383.50"></text></g><g><title>main.exe`core::num::impl$7::overflowing_add (1 samples, 0.24%)</title><rect x="88.4706%" y="357" width="0.2353%" height="15" fill="rgb(252,136,11)" fg:x="376" fg:w="1"/><text x="88.7206%" y="367.50"></text></g><g><title>main.exe`rendering_3d::wavefront::WavefrontObject::parse_face_indices(ref$ (5 samples, 1.18%)</title><rect x="88.0000%" y="453" width="1.1765%" height="15" fill="rgb(219,138,53)" fg:x="374" fg:w="5"/><text x="88.2500%" y="463.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,u16&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (4 samples, 0.94%)</title><rect x="88.2353%" y="437" width="0.9412%" height="15" fill="rgb(211,51,23)" fg:x="375" fg:w="4"/><text x="88.4853%" y="447.50"></text></g><g><title>main.exe`nom::character::complete::u16&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;(ref$ (4 samples, 0.94%)</title><rect x="88.2353%" y="421" width="0.9412%" height="15" fill="rgb(247,221,28)" fg:x="375" fg:w="4"/><text x="88.4853%" y="431.50"></text></g><g><title>main.exe`core::str::iter::impl$5::next (2 samples, 0.47%)</title><rect x="88.7059%" y="405" width="0.4706%" height="15" fill="rgb(251,222,45)" fg:x="377" fg:w="2"/><text x="88.9559%" y="415.50"></text></g><g><title>main.exe`core::str::iter::impl$0::next (2 samples, 0.47%)</title><rect x="88.7059%" y="389" width="0.4706%" height="15" fill="rgb(217,162,53)" fg:x="377" fg:w="2"/><text x="88.9559%" y="399.50"></text></g><g><title>main.exe`core::str::validations::next_code_point(core::slice::iter::Iter (2 samples, 0.47%)</title><rect x="88.7059%" y="373" width="0.4706%" height="15" fill="rgb(229,93,14)" fg:x="377" fg:w="2"/><text x="88.9559%" y="383.50"></text></g><g><title>main.exe`core::slice::iter::impl$181::next(core::slice::iter::Iter (1 samples, 0.24%)</title><rect x="88.9412%" y="357" width="0.2353%" height="15" fill="rgb(209,67,49)" fg:x="378" fg:w="1"/><text x="89.1912%" y="367.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="90.3529%" y="165" width="0.2353%" height="15" fill="rgb(213,87,29)" fg:x="384" fg:w="1"/><text x="90.6029%" y="175.50"></text></g><g><title>main.exe`nom::traits::impl$21::split_at_position1_complete&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;(ref$&lt;str$&gt;*, nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="90.3529%" y="149" width="0.2353%" height="15" fill="rgb(205,151,52)" fg:x="384" fg:w="1"/><text x="90.6029%" y="159.50"></text></g><g><title>main.exe`core::str::impl$0::find(ref$&lt;str$&gt;, nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="90.3529%" y="133" width="0.2353%" height="15" fill="rgb(253,215,39)" fg:x="384" fg:w="1"/><text x="90.6029%" y="143.50"></text></g><g><title>main.exe`core::str::pattern::impl$23::next_match(core::str::pattern::CharPredicateSearcher&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="90.3529%" y="117" width="0.2353%" height="15" fill="rgb(221,220,41)" fg:x="384" fg:w="1"/><text x="90.6029%" y="127.50"></text></g><g><title>main.exe`core::str::pattern::Searcher::next_match(core::str::pattern::MultiCharEqSearcher&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="90.3529%" y="101" width="0.2353%" height="15" fill="rgb(218,133,21)" fg:x="384" fg:w="1"/><text x="90.6029%" y="111.50"></text></g><g><title>main.exe`core::str::pattern::impl$9::next(core::str::pattern::MultiCharEqSearcher&lt;nom::character::complete::digit1::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$ (1 samples, 0.24%)</title><rect x="90.3529%" y="85" width="0.2353%" height="15" fill="rgb(221,193,43)" fg:x="384" fg:w="1"/><text x="90.6029%" y="95.50"></text></g><g><title>main.exe`core::str::iter::impl$5::next (1 samples, 0.24%)</title><rect x="90.3529%" y="69" width="0.2353%" height="15" fill="rgb(240,128,52)" fg:x="384" fg:w="1"/><text x="90.6029%" y="79.50"></text></g><g><title>main.exe`core::str::iter::impl$0::next (1 samples, 0.24%)</title><rect x="90.3529%" y="53" width="0.2353%" height="15" fill="rgb(253,114,12)" fg:x="384" fg:w="1"/><text x="90.6029%" y="63.50"></text></g><g><title>main.exe`core::str::validations::next_code_point(core::slice::iter::Iter (1 samples, 0.24%)</title><rect x="90.3529%" y="37" width="0.2353%" height="15" fill="rgb(215,223,47)" fg:x="384" fg:w="1"/><text x="90.6029%" y="47.50"></text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (2 samples, 0.47%)</title><rect x="90.3529%" y="197" width="0.4706%" height="15" fill="rgb(248,225,23)" fg:x="384" fg:w="2"/><text x="90.6029%" y="207.50"></text></g><g><title>main.exe`nom::sequence::impl$2::parse&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt;(tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="90.3529%" y="181" width="0.4706%" height="15" fill="rgb(250,108,0)" fg:x="384" fg:w="2"/><text x="90.6029%" y="191.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt;*, ref$ (1 samples, 0.24%)</title><rect x="90.5882%" y="165" width="0.2353%" height="15" fill="rgb(228,208,7)" fg:x="385" fg:w="1"/><text x="90.8382%" y="175.50"></text></g><g><title>main.exe`nom::combinator::opt::closure$0(nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt;*, ref$ (1 samples, 0.24%)</title><rect x="90.5882%" y="149" width="0.2353%" height="15" fill="rgb(244,45,10)" fg:x="385" fg:w="1"/><text x="90.8382%" y="159.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::number::complete::recognize_float::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;*, ref$ (3 samples, 0.71%)</title><rect x="90.3529%" y="277" width="0.7059%" height="15" fill="rgb(207,125,25)" fg:x="384" fg:w="3"/><text x="90.6029%" y="287.50"></text></g><g><title>main.exe`nom::branch::alt::closure$0(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::number::complete::recognize_float::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;*, ref$ (3 samples, 0.71%)</title><rect x="90.3529%" y="261" width="0.7059%" height="15" fill="rgb(210,195,18)" fg:x="384" fg:w="3"/><text x="90.6029%" y="271.50"></text></g><g><title>main.exe`nom::branch::impl$1::choice(tuple$&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::number::complete::recognize_float::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;*, ref$ (3 samples, 0.71%)</title><rect x="90.3529%" y="245" width="0.7059%" height="15" fill="rgb(249,80,12)" fg:x="384" fg:w="3"/><text x="90.6029%" y="255.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (3 samples, 0.71%)</title><rect x="90.3529%" y="229" width="0.7059%" height="15" fill="rgb(221,65,9)" fg:x="384" fg:w="3"/><text x="90.6029%" y="239.50"></text></g><g><title>main.exe`nom::combinator::map::closure$0(nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (3 samples, 0.71%)</title><rect x="90.3529%" y="213" width="0.7059%" height="15" fill="rgb(235,49,36)" fg:x="384" fg:w="3"/><text x="90.6029%" y="223.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.24%)</title><rect x="90.8235%" y="197" width="0.2353%" height="15" fill="rgb(225,32,20)" fg:x="386" fg:w="1"/><text x="91.0735%" y="207.50"></text></g><g><title>main.exe`nom::sequence::tuple::closure$0(nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;*, ref$ (1 samples, 0.24%)</title><rect x="90.8235%" y="181" width="0.2353%" height="15" fill="rgb(215,141,46)" fg:x="386" fg:w="1"/><text x="91.0735%" y="191.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.0588%" y="277" width="0.4706%" height="15" fill="rgb(250,160,47)" fg:x="387" fg:w="2"/><text x="91.3088%" y="287.50"></text></g><g><title>main.exe`nom::combinator::opt::closure$0(nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.0588%" y="261" width="0.4706%" height="15" fill="rgb(216,222,40)" fg:x="387" fg:w="2"/><text x="91.3088%" y="271.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.0588%" y="245" width="0.4706%" height="15" fill="rgb(234,217,39)" fg:x="387" fg:w="2"/><text x="91.3088%" y="255.50"></text></g><g><title>main.exe`nom::branch::alt::closure$0(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.0588%" y="229" width="0.4706%" height="15" fill="rgb(207,178,40)" fg:x="387" fg:w="2"/><text x="91.3088%" y="239.50"></text></g><g><title>main.exe`nom::branch::impl$1::choice(tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.0588%" y="213" width="0.4706%" height="15" fill="rgb(221,136,13)" fg:x="387" fg:w="2"/><text x="91.3088%" y="223.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.0588%" y="197" width="0.4706%" height="15" fill="rgb(249,199,10)" fg:x="387" fg:w="2"/><text x="91.3088%" y="207.50"></text></g><g><title>main.exe`nom::character::complete::char::closure$0(nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (1 samples, 0.24%)</title><rect x="91.2941%" y="181" width="0.2353%" height="15" fill="rgb(249,222,13)" fg:x="388" fg:w="1"/><text x="91.5441%" y="191.50"></text></g><g><title>`0x7FF9F3A8A9F8 (389 samples, 91.53%)</title><rect x="0.4706%" y="677" width="91.5294%" height="15" fill="rgb(244,185,38)" fg:x="2" fg:w="389"/><text x="0.7206%" y="687.50">`0x7FF9F3A8A9F8</text></g><g><title>`0x7FF9F2A526AD (389 samples, 91.53%)</title><rect x="0.4706%" y="661" width="91.5294%" height="15" fill="rgb(236,202,9)" fg:x="2" fg:w="389"/><text x="0.7206%" y="671.50">`0x7FF9F2A526AD</text></g><g><title>main.exe`__scrt_common_main_seh() (380 samples, 89.41%)</title><rect x="2.5882%" y="645" width="89.4118%" height="15" fill="rgb(250,229,37)" fg:x="11" fg:w="380"/><text x="2.8382%" y="655.50">main.exe`__scrt_common_main_seh()</text></g><g><title>main.exe`invoke_main() (374 samples, 88.00%)</title><rect x="4.0000%" y="629" width="88.0000%" height="15" fill="rgb(206,174,23)" fg:x="17" fg:w="374"/><text x="4.2500%" y="639.50">main.exe`invoke_main()</text></g><g><title>main.exe`main (374 samples, 88.00%)</title><rect x="4.0000%" y="613" width="88.0000%" height="15" fill="rgb(211,33,43)" fg:x="17" fg:w="374"/><text x="4.2500%" y="623.50">main.exe`main</text></g><g><title>main.exe`std::rt::lang_start_internal (374 samples, 88.00%)</title><rect x="4.0000%" y="597" width="88.0000%" height="15" fill="rgb(245,58,50)" fg:x="17" fg:w="374"/><text x="4.2500%" y="607.50">main.exe`std::rt::lang_start_internal</text></g><g><title>main.exe`std::panic::catch_unwind (374 samples, 88.00%)</title><rect x="4.0000%" y="581" width="88.0000%" height="15" fill="rgb(244,68,36)" fg:x="17" fg:w="374"/><text x="4.2500%" y="591.50">main.exe`std::panic::catch_unwind</text></g><g><title>main.exe`std::panicking::try (374 samples, 88.00%)</title><rect x="4.0000%" y="565" width="88.0000%" height="15" fill="rgb(232,229,15)" fg:x="17" fg:w="374"/><text x="4.2500%" y="575.50">main.exe`std::panicking::try</text></g><g><title>main.exe`std::panicking::try::do_call (374 samples, 88.00%)</title><rect x="4.0000%" y="549" width="88.0000%" height="15" fill="rgb(254,30,23)" fg:x="17" fg:w="374"/><text x="4.2500%" y="559.50">main.exe`std::panicking::try::do_call</text></g><g><title>main.exe`std::rt::lang_start_internal::closure$2 (374 samples, 88.00%)</title><rect x="4.0000%" y="533" width="88.0000%" height="15" fill="rgb(235,160,14)" fg:x="17" fg:w="374"/><text x="4.2500%" y="543.50">main.exe`std::rt::lang_start_internal::closure$2</text></g><g><title>main.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (374 samples, 88.00%)</title><rect x="4.0000%" y="517" width="88.0000%" height="15" fill="rgb(212,155,44)" fg:x="17" fg:w="374"/><text x="4.2500%" y="527.50">main.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$</text></g><g><title>main.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (374 samples, 88.00%)</title><rect x="4.0000%" y="501" width="88.0000%" height="15" fill="rgb(226,2,50)" fg:x="17" fg:w="374"/><text x="4.2500%" y="511.50">main.exe`std::sys_common::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*)</text></g><g><title>main.exe`main::main (374 samples, 88.00%)</title><rect x="4.0000%" y="485" width="88.0000%" height="15" fill="rgb(234,177,6)" fg:x="17" fg:w="374"/><text x="4.2500%" y="495.50">main.exe`main::main</text></g><g><title>main.exe`rendering_3d::wavefront::WavefrontObject::parse_obj_file(ref$ (20 samples, 4.71%)</title><rect x="87.2941%" y="469" width="4.7059%" height="15" fill="rgb(217,24,9)" fg:x="371" fg:w="20"/><text x="87.5441%" y="479.50">main...</text></g><g><title>main.exe`rendering_3d::wavefront::WavefrontObject::parse_vertex(ref$&lt;str$&gt;, ref$ (12 samples, 2.82%)</title><rect x="89.1765%" y="453" width="2.8235%" height="15" fill="rgb(220,13,46)" fg:x="379" fg:w="12"/><text x="89.4265%" y="463.50">ma..</text></g><g><title>main.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,f32&gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$ (11 samples, 2.59%)</title><rect x="89.4118%" y="437" width="2.5882%" height="15" fill="rgb(239,221,27)" fg:x="380" fg:w="11"/><text x="89.6618%" y="447.50">ma..</text></g><g><title>main.exe`nom::number::complete::float&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;(ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="421" width="1.8824%" height="15" fill="rgb(222,198,25)" fg:x="383" fg:w="8"/><text x="90.3676%" y="431.50">m..</text></g><g><title>main.exe`nom::number::complete::recognize_float_or_exceptions(ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="405" width="1.8824%" height="15" fill="rgb(211,99,13)" fg:x="383" fg:w="8"/><text x="90.3676%" y="415.50">m..</text></g><g><title>main.exe`nom::branch::alt::closure$0(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::number::complete::recognize_float_or_exceptions::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::number::complete::recognize_float_or_exceptions::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::number::complete::recognize_float_or_exceptions::closure_env$2&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::number::complete::recognize_float_or_exceptions::closure_env$3&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;*, ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="389" width="1.8824%" height="15" fill="rgb(232,111,31)" fg:x="383" fg:w="8"/><text x="90.3676%" y="399.50">m..</text></g><g><title>main.exe`nom::branch::impl$3::choice(tuple$&lt;nom::number::complete::recognize_float_or_exceptions::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::number::complete::recognize_float_or_exceptions::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::number::complete::recognize_float_or_exceptions::closure_env$2&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::number::complete::recognize_float_or_exceptions::closure_env$3&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="373" width="1.8824%" height="15" fill="rgb(245,82,37)" fg:x="383" fg:w="8"/><text x="90.3676%" y="383.50">m..</text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::number::complete::recognize_float_or_exceptions::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="357" width="1.8824%" height="15" fill="rgb(227,149,46)" fg:x="383" fg:w="8"/><text x="90.3676%" y="367.50">m..</text></g><g><title>main.exe`nom::number::complete::recognize_float_or_exceptions::closure$0(nom::number::complete::recognize_float_or_exceptions::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;*, ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="341" width="1.8824%" height="15" fill="rgb(218,36,50)" fg:x="383" fg:w="8"/><text x="90.3676%" y="351.50">m..</text></g><g><title>main.exe`nom::number::complete::recognize_float(ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="325" width="1.8824%" height="15" fill="rgb(226,80,48)" fg:x="383" fg:w="8"/><text x="90.3676%" y="335.50">m..</text></g><g><title>main.exe`nom::combinator::recognize::closure$0(nom::combinator::recognize::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;enum2$&lt;core::option::Option&lt;char&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;enum2$&lt;core::option::Option&lt;char&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::number::complete::recognize_float::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt; &gt; &gt;*, ref$ (8 samples, 1.88%)</title><rect x="90.1176%" y="309" width="1.8824%" height="15" fill="rgb(238,224,15)" fg:x="383" fg:w="8"/><text x="90.3676%" y="319.50">m..</text></g><g><title>main.exe`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;char&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::number::complete::recognize_float::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;(tuple$&lt;nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;ref$&lt;str$&gt;,enum2$&lt;core::option::Option&lt;tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;),nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::pair::closure_env$0&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;,nom::number::complete::recognize_float::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,nom::combinator::map::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,tuple$&lt;&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;,nom::number::complete::recognize_float::closure_env$1&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt; &gt;*, ref$ (7 samples, 1.65%)</title><rect x="90.3529%" y="293" width="1.6471%" height="15" fill="rgb(241,136,10)" fg:x="384" fg:w="7"/><text x="90.6029%" y="303.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.5294%" y="277" width="0.4706%" height="15" fill="rgb(208,32,45)" fg:x="389" fg:w="2"/><text x="91.7794%" y="287.50"></text></g><g><title>main.exe`nom::combinator::opt::closure$0(nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::sequence::tuple::closure_env$0&lt;ref$&lt;str$&gt;,tuple$&lt;char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt; &gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.5294%" y="261" width="0.4706%" height="15" fill="rgb(207,135,9)" fg:x="389" fg:w="2"/><text x="91.7794%" y="271.50"></text></g><g><title>main.exe`nom::sequence::impl$3::parse&lt;ref$&lt;str$&gt;,char,enum2$&lt;core::option::Option&lt;char&gt; &gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;(tuple$&lt;nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;,nom::combinator::opt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt;,nom::combinator::cut::closure_env$0&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;ref$&lt;str$&gt;,ref$&lt;str$&gt; &gt;,enum2$&lt;nom::internal::Err&lt;nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt; &gt; (*)(ref$&lt;str$&gt;)&gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.5294%" y="245" width="0.4706%" height="15" fill="rgb(206,86,44)" fg:x="389" fg:w="2"/><text x="91.7794%" y="255.50"></text></g><g><title>main.exe`nom::internal::impl$12::parse(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.5294%" y="229" width="0.4706%" height="15" fill="rgb(245,177,15)" fg:x="389" fg:w="2"/><text x="91.7794%" y="239.50"></text></g><g><title>main.exe`nom::branch::alt::closure$0(nom::branch::alt::closure_env$0&lt;ref$&lt;str$&gt;,char,nom::error::Error&lt;ref$&lt;str$&gt; &gt;,tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.5294%" y="213" width="0.4706%" height="15" fill="rgb(206,64,50)" fg:x="389" fg:w="2"/><text x="91.7794%" y="223.50"></text></g><g><title>main.exe`nom::branch::impl$1::choice(tuple$&lt;nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt;,nom::character::complete::char::closure_env$0&lt;ref$&lt;str$&gt;,nom::error::Error&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, ref$ (2 samples, 0.47%)</title><rect x="91.5294%" y="197" width="0.4706%" height="15" fill="rgb(234,36,40)" fg:x="389" fg:w="2"/><text x="91.7794%" y="207.50"></text></g><g><title>`0x7FF9F3AA3D70 (1 samples, 0.24%)</title><rect x="92.0000%" y="677" width="0.2353%" height="15" fill="rgb(213,64,8)" fg:x="391" fg:w="1"/><text x="92.2500%" y="687.50"></text></g><g><title>`0x7FF9F3B045F5 (1 samples, 0.24%)</title><rect x="92.2353%" y="629" width="0.2353%" height="15" fill="rgb(210,75,36)" fg:x="392" fg:w="1"/><text x="92.4853%" y="639.50"></text></g><g><title>`0x7FF9F3B0E3E5 (1 samples, 0.24%)</title><rect x="92.2353%" y="613" width="0.2353%" height="15" fill="rgb(229,88,21)" fg:x="392" fg:w="1"/><text x="92.4853%" y="623.50"></text></g><g><title>`0x7FF9F3ADDCF8 (1 samples, 0.24%)</title><rect x="92.2353%" y="597" width="0.2353%" height="15" fill="rgb(252,204,47)" fg:x="392" fg:w="1"/><text x="92.4853%" y="607.50"></text></g><g><title>`0x7FF9F3ADDB84 (1 samples, 0.24%)</title><rect x="92.2353%" y="581" width="0.2353%" height="15" fill="rgb(208,77,27)" fg:x="392" fg:w="1"/><text x="92.4853%" y="591.50"></text></g><g><title>`0x7FF9F3B0484F (1 samples, 0.24%)</title><rect x="92.4706%" y="629" width="0.2353%" height="15" fill="rgb(221,76,26)" fg:x="393" fg:w="1"/><text x="92.7206%" y="639.50"></text></g><g><title>`0x7FF9F3B0DFAE (1 samples, 0.24%)</title><rect x="92.4706%" y="613" width="0.2353%" height="15" fill="rgb(225,139,18)" fg:x="393" fg:w="1"/><text x="92.7206%" y="623.50"></text></g><g><title>`0x7FF9F3B04F42 (1 samples, 0.24%)</title><rect x="92.7059%" y="629" width="0.2353%" height="15" fill="rgb(230,137,11)" fg:x="394" fg:w="1"/><text x="92.9559%" y="639.50"></text></g><g><title>`0x7FF9F3A614D0 (1 samples, 0.24%)</title><rect x="92.7059%" y="613" width="0.2353%" height="15" fill="rgb(212,28,1)" fg:x="394" fg:w="1"/><text x="92.9559%" y="623.50"></text></g><g><title>`0x7FF9F3A621BA (1 samples, 0.24%)</title><rect x="92.7059%" y="597" width="0.2353%" height="15" fill="rgb(248,164,17)" fg:x="394" fg:w="1"/><text x="92.9559%" y="607.50"></text></g><g><title>`0x7FF9F3A62047 (1 samples, 0.24%)</title><rect x="92.7059%" y="581" width="0.2353%" height="15" fill="rgb(222,171,42)" fg:x="394" fg:w="1"/><text x="92.9559%" y="591.50"></text></g><g><title>`0x7FF9F3AD26A4 (1 samples, 0.24%)</title><rect x="92.7059%" y="565" width="0.2353%" height="15" fill="rgb(243,84,45)" fg:x="394" fg:w="1"/><text x="92.9559%" y="575.50"></text></g><g><title>`0x7FF9F3B04F85 (1 samples, 0.24%)</title><rect x="92.9412%" y="629" width="0.2353%" height="15" fill="rgb(252,49,23)" fg:x="395" fg:w="1"/><text x="93.1912%" y="639.50"></text></g><g><title>`0x7FF9F3A8810A (1 samples, 0.24%)</title><rect x="92.9412%" y="613" width="0.2353%" height="15" fill="rgb(215,19,7)" fg:x="395" fg:w="1"/><text x="93.1912%" y="623.50"></text></g><g><title>`0x7FF9F3A887CF (1 samples, 0.24%)</title><rect x="92.9412%" y="597" width="0.2353%" height="15" fill="rgb(238,81,41)" fg:x="395" fg:w="1"/><text x="93.1912%" y="607.50"></text></g><g><title>`0x7FF9F3A88874 (1 samples, 0.24%)</title><rect x="92.9412%" y="581" width="0.2353%" height="15" fill="rgb(210,199,37)" fg:x="395" fg:w="1"/><text x="93.1912%" y="591.50"></text></g><g><title>`0x7FF9F3A4E878 (1 samples, 0.24%)</title><rect x="92.9412%" y="565" width="0.2353%" height="15" fill="rgb(244,192,49)" fg:x="395" fg:w="1"/><text x="93.1912%" y="575.50"></text></g><g><title>`0x7FF9F3A88351 (1 samples, 0.24%)</title><rect x="92.9412%" y="549" width="0.2353%" height="15" fill="rgb(226,211,11)" fg:x="395" fg:w="1"/><text x="93.1912%" y="559.50"></text></g><g><title>`0x7FF9F3A8843F (1 samples, 0.24%)</title><rect x="92.9412%" y="533" width="0.2353%" height="15" fill="rgb(236,162,54)" fg:x="395" fg:w="1"/><text x="93.1912%" y="543.50"></text></g><g><title>`0x7FF9F3A6CD49 (1 samples, 0.24%)</title><rect x="92.9412%" y="517" width="0.2353%" height="15" fill="rgb(220,229,9)" fg:x="395" fg:w="1"/><text x="93.1912%" y="527.50"></text></g><g><title>`0x7FF9F3A6FA28 (1 samples, 0.24%)</title><rect x="92.9412%" y="501" width="0.2353%" height="15" fill="rgb(250,87,22)" fg:x="395" fg:w="1"/><text x="93.1912%" y="511.50"></text></g><g><title>`0x7FF9F3A79FCB (1 samples, 0.24%)</title><rect x="92.9412%" y="485" width="0.2353%" height="15" fill="rgb(239,43,17)" fg:x="395" fg:w="1"/><text x="93.1912%" y="495.50"></text></g><g><title>`0x7FF9F3A79531 (1 samples, 0.24%)</title><rect x="92.9412%" y="469" width="0.2353%" height="15" fill="rgb(231,177,25)" fg:x="395" fg:w="1"/><text x="93.1912%" y="479.50"></text></g><g><title>`0x7FF9F3A78E0C (1 samples, 0.24%)</title><rect x="92.9412%" y="453" width="0.2353%" height="15" fill="rgb(219,179,1)" fg:x="395" fg:w="1"/><text x="93.1912%" y="463.50"></text></g><g><title>`0x7FF9F3A79789 (1 samples, 0.24%)</title><rect x="92.9412%" y="437" width="0.2353%" height="15" fill="rgb(238,219,53)" fg:x="395" fg:w="1"/><text x="93.1912%" y="447.50"></text></g><g><title>`0x7FF9F3A623EA (1 samples, 0.24%)</title><rect x="92.9412%" y="421" width="0.2353%" height="15" fill="rgb(232,167,36)" fg:x="395" fg:w="1"/><text x="93.1912%" y="431.50"></text></g><g><title>`0x7FF9F3AAF462 (1 samples, 0.24%)</title><rect x="92.9412%" y="405" width="0.2353%" height="15" fill="rgb(244,19,51)" fg:x="395" fg:w="1"/><text x="93.1912%" y="415.50"></text></g><g><title>`0x7FF9F3ACEE94 (1 samples, 0.24%)</title><rect x="92.9412%" y="389" width="0.2353%" height="15" fill="rgb(224,6,22)" fg:x="395" fg:w="1"/><text x="93.1912%" y="399.50"></text></g><g><title>`0x7FF9F3B0533A (1 samples, 0.24%)</title><rect x="93.1765%" y="629" width="0.2353%" height="15" fill="rgb(224,145,5)" fg:x="396" fg:w="1"/><text x="93.4265%" y="639.50"></text></g><g><title>`0x7FF9F3AA8632 (1 samples, 0.24%)</title><rect x="93.1765%" y="613" width="0.2353%" height="15" fill="rgb(234,130,49)" fg:x="396" fg:w="1"/><text x="93.4265%" y="623.50"></text></g><g><title>`0x7FF9F3B0592A (1 samples, 0.24%)</title><rect x="93.4118%" y="629" width="0.2353%" height="15" fill="rgb(254,6,2)" fg:x="397" fg:w="1"/><text x="93.6618%" y="639.50"></text></g><g><title>`0x7FF9F3AAB808 (1 samples, 0.24%)</title><rect x="93.4118%" y="613" width="0.2353%" height="15" fill="rgb(208,96,46)" fg:x="397" fg:w="1"/><text x="93.6618%" y="623.50"></text></g><g><title>`0x7FF9F3AAB8DC (1 samples, 0.24%)</title><rect x="93.4118%" y="597" width="0.2353%" height="15" fill="rgb(239,3,39)" fg:x="397" fg:w="1"/><text x="93.6618%" y="607.50"></text></g><g><title>`0x7FF9F3ACF2B4 (1 samples, 0.24%)</title><rect x="93.4118%" y="581" width="0.2353%" height="15" fill="rgb(233,210,1)" fg:x="397" fg:w="1"/><text x="93.6618%" y="591.50"></text></g><g><title>`0x7FF9F3A5C244 (1 samples, 0.24%)</title><rect x="93.6471%" y="533" width="0.2353%" height="15" fill="rgb(244,137,37)" fg:x="398" fg:w="1"/><text x="93.8971%" y="543.50"></text></g><g><title>`0x7FF9F3A5C0BA (1 samples, 0.24%)</title><rect x="93.6471%" y="517" width="0.2353%" height="15" fill="rgb(240,136,2)" fg:x="398" fg:w="1"/><text x="93.8971%" y="527.50"></text></g><g><title>`0x7FF9F3A5C4BC (1 samples, 0.24%)</title><rect x="93.6471%" y="501" width="0.2353%" height="15" fill="rgb(239,18,37)" fg:x="398" fg:w="1"/><text x="93.8971%" y="511.50"></text></g><g><title>`0x7FF9F3ACF154 (1 samples, 0.24%)</title><rect x="93.6471%" y="485" width="0.2353%" height="15" fill="rgb(218,185,22)" fg:x="398" fg:w="1"/><text x="93.8971%" y="495.50"></text></g><g><title>`0x7FF9F3A546AB (1 samples, 0.24%)</title><rect x="93.8824%" y="517" width="0.2353%" height="15" fill="rgb(225,218,4)" fg:x="399" fg:w="1"/><text x="94.1324%" y="527.50"></text></g><g><title>`0x7FF9F3A548F6 (1 samples, 0.24%)</title><rect x="93.8824%" y="501" width="0.2353%" height="15" fill="rgb(230,182,32)" fg:x="399" fg:w="1"/><text x="94.1324%" y="511.50"></text></g><g><title>`0x7FF9F3A558B4 (1 samples, 0.24%)</title><rect x="93.8824%" y="485" width="0.2353%" height="15" fill="rgb(242,56,43)" fg:x="399" fg:w="1"/><text x="94.1324%" y="495.50"></text></g><g><title>`0x7FF9F3A5CE19 (1 samples, 0.24%)</title><rect x="93.8824%" y="469" width="0.2353%" height="15" fill="rgb(233,99,24)" fg:x="399" fg:w="1"/><text x="94.1324%" y="479.50"></text></g><g><title>`0x7FF9F3A5C244 (1 samples, 0.24%)</title><rect x="93.8824%" y="453" width="0.2353%" height="15" fill="rgb(234,209,42)" fg:x="399" fg:w="1"/><text x="94.1324%" y="463.50"></text></g><g><title>`0x7FF9F3A5C0BA (1 samples, 0.24%)</title><rect x="93.8824%" y="437" width="0.2353%" height="15" fill="rgb(227,7,12)" fg:x="399" fg:w="1"/><text x="94.1324%" y="447.50"></text></g><g><title>`0x7FF9F3A5C4BC (1 samples, 0.24%)</title><rect x="93.8824%" y="421" width="0.2353%" height="15" fill="rgb(245,203,43)" fg:x="399" fg:w="1"/><text x="94.1324%" y="431.50"></text></g><g><title>`0x7FF9F3ACF154 (1 samples, 0.24%)</title><rect x="93.8824%" y="405" width="0.2353%" height="15" fill="rgb(238,205,33)" fg:x="399" fg:w="1"/><text x="94.1324%" y="415.50"></text></g><g><title>`0x7FF9F3A53C53 (1 samples, 0.24%)</title><rect x="94.1176%" y="501" width="0.2353%" height="15" fill="rgb(231,56,7)" fg:x="400" fg:w="1"/><text x="94.3676%" y="511.50"></text></g><g><title>`0x7FF9F3A588A6 (4 samples, 0.94%)</title><rect x="93.6471%" y="581" width="0.9412%" height="15" fill="rgb(244,186,29)" fg:x="398" fg:w="4"/><text x="93.8971%" y="591.50"></text></g><g><title>`0x7FF9F3A5DD99 (4 samples, 0.94%)</title><rect x="93.6471%" y="565" width="0.9412%" height="15" fill="rgb(234,111,31)" fg:x="398" fg:w="4"/><text x="93.8971%" y="575.50"></text></g><g><title>`0x7FF9F3A5CE19 (4 samples, 0.94%)</title><rect x="93.6471%" y="549" width="0.9412%" height="15" fill="rgb(241,149,10)" fg:x="398" fg:w="4"/><text x="93.8971%" y="559.50"></text></g><g><title>`0x7FF9F3A5C3E8 (3 samples, 0.71%)</title><rect x="93.8824%" y="533" width="0.7059%" height="15" fill="rgb(249,206,44)" fg:x="399" fg:w="3"/><text x="94.1324%" y="543.50"></text></g><g><title>`0x7FF9F3A54764 (2 samples, 0.47%)</title><rect x="94.1176%" y="517" width="0.4706%" height="15" fill="rgb(251,153,30)" fg:x="400" fg:w="2"/><text x="94.3676%" y="527.50"></text></g><g><title>`0x7FF9F3A53CCB (1 samples, 0.24%)</title><rect x="94.3529%" y="501" width="0.2353%" height="15" fill="rgb(239,152,38)" fg:x="401" fg:w="1"/><text x="94.6029%" y="511.50"></text></g><g><title>`0x7FF9F3A588D0 (1 samples, 0.24%)</title><rect x="94.5882%" y="581" width="0.2353%" height="15" fill="rgb(249,139,47)" fg:x="402" fg:w="1"/><text x="94.8382%" y="591.50"></text></g><g><title>`0x7FF9F3A5A090 (1 samples, 0.24%)</title><rect x="94.5882%" y="565" width="0.2353%" height="15" fill="rgb(244,64,35)" fg:x="402" fg:w="1"/><text x="94.8382%" y="575.50"></text></g><g><title>`0x7FF9F3A40E7B (1 samples, 0.24%)</title><rect x="94.5882%" y="549" width="0.2353%" height="15" fill="rgb(216,46,15)" fg:x="402" fg:w="1"/><text x="94.8382%" y="559.50"></text></g><g><title>`0x7FF9F3A53CC7 (1 samples, 0.24%)</title><rect x="94.5882%" y="533" width="0.2353%" height="15" fill="rgb(250,74,19)" fg:x="402" fg:w="1"/><text x="94.8382%" y="543.50"></text></g><g><title>`0x7FF9F0FDCEF3 (1 samples, 0.24%)</title><rect x="94.8235%" y="469" width="0.2353%" height="15" fill="rgb(249,42,33)" fg:x="403" fg:w="1"/><text x="95.0735%" y="479.50"></text></g><g><title>`0x7FF9F0FDC642 (1 samples, 0.24%)</title><rect x="94.8235%" y="453" width="0.2353%" height="15" fill="rgb(242,149,17)" fg:x="403" fg:w="1"/><text x="95.0735%" y="463.50"></text></g><g><title>`0x7FF9F3A7AFD2 (1 samples, 0.24%)</title><rect x="94.8235%" y="437" width="0.2353%" height="15" fill="rgb(244,29,21)" fg:x="403" fg:w="1"/><text x="95.0735%" y="447.50"></text></g><g><title>`0x7FF9F3A7AD8D (1 samples, 0.24%)</title><rect x="94.8235%" y="421" width="0.2353%" height="15" fill="rgb(220,130,37)" fg:x="403" fg:w="1"/><text x="95.0735%" y="431.50"></text></g><g><title>`0x7FF9F3AD0084 (1 samples, 0.24%)</title><rect x="94.8235%" y="405" width="0.2353%" height="15" fill="rgb(211,67,2)" fg:x="403" fg:w="1"/><text x="95.0735%" y="415.50"></text></g><g><title>`0x7FF9F0FDD10B (1 samples, 0.24%)</title><rect x="95.0588%" y="469" width="0.2353%" height="15" fill="rgb(235,68,52)" fg:x="404" fg:w="1"/><text x="95.3088%" y="479.50"></text></g><g><title>`0x7FF9F0FDC25C (1 samples, 0.24%)</title><rect x="95.0588%" y="453" width="0.2353%" height="15" fill="rgb(246,142,3)" fg:x="404" fg:w="1"/><text x="95.3088%" y="463.50"></text></g><g><title>`0x7FF9F0FDBD2C (1 samples, 0.24%)</title><rect x="95.0588%" y="437" width="0.2353%" height="15" fill="rgb(241,25,7)" fg:x="404" fg:w="1"/><text x="95.3088%" y="447.50"></text></g><g><title>`0x7FF9F0FDBC2B (1 samples, 0.24%)</title><rect x="95.0588%" y="421" width="0.2353%" height="15" fill="rgb(242,119,39)" fg:x="404" fg:w="1"/><text x="95.3088%" y="431.50"></text></g><g><title>`0x7FF9F0FDB631 (1 samples, 0.24%)</title><rect x="95.0588%" y="405" width="0.2353%" height="15" fill="rgb(241,98,45)" fg:x="404" fg:w="1"/><text x="95.3088%" y="415.50"></text></g><g><title>`0x7FF9F0FDB6F2 (1 samples, 0.24%)</title><rect x="95.0588%" y="389" width="0.2353%" height="15" fill="rgb(254,28,30)" fg:x="404" fg:w="1"/><text x="95.3088%" y="399.50"></text></g><g><title>`0x7FF9F0FD1280 (1 samples, 0.24%)</title><rect x="95.0588%" y="373" width="0.2353%" height="15" fill="rgb(241,142,54)" fg:x="404" fg:w="1"/><text x="95.3088%" y="383.50"></text></g><g><title>`0x7FF9F0FDD14B (1 samples, 0.24%)</title><rect x="95.2941%" y="469" width="0.2353%" height="15" fill="rgb(222,85,15)" fg:x="405" fg:w="1"/><text x="95.5441%" y="479.50"></text></g><g><title>`0x7FF9F101071F (1 samples, 0.24%)</title><rect x="95.2941%" y="453" width="0.2353%" height="15" fill="rgb(210,85,47)" fg:x="405" fg:w="1"/><text x="95.5441%" y="463.50"></text></g><g><title>`0x7FF9F1010ACA (1 samples, 0.24%)</title><rect x="95.2941%" y="437" width="0.2353%" height="15" fill="rgb(224,206,25)" fg:x="405" fg:w="1"/><text x="95.5441%" y="447.50"></text></g><g><title>`0x7FF9F3ACF6F4 (1 samples, 0.24%)</title><rect x="95.2941%" y="421" width="0.2353%" height="15" fill="rgb(243,201,19)" fg:x="405" fg:w="1"/><text x="95.5441%" y="431.50"></text></g><g><title>`0x7FF9F0FDCB7D (4 samples, 0.94%)</title><rect x="94.8235%" y="485" width="0.9412%" height="15" fill="rgb(236,59,4)" fg:x="403" fg:w="4"/><text x="95.0735%" y="495.50"></text></g><g><title>`0x7FF9F0FDD158 (1 samples, 0.24%)</title><rect x="95.5294%" y="469" width="0.2353%" height="15" fill="rgb(254,179,45)" fg:x="406" fg:w="1"/><text x="95.7794%" y="479.50"></text></g><g><title>`0x7FF9F101B5C0 (1 samples, 0.24%)</title><rect x="95.5294%" y="453" width="0.2353%" height="15" fill="rgb(226,14,10)" fg:x="406" fg:w="1"/><text x="95.7794%" y="463.50"></text></g><g><title>`0x7FF9F3A614D0 (1 samples, 0.24%)</title><rect x="95.5294%" y="437" width="0.2353%" height="15" fill="rgb(244,27,41)" fg:x="406" fg:w="1"/><text x="95.7794%" y="447.50"></text></g><g><title>`0x7FF9F3A621BA (1 samples, 0.24%)</title><rect x="95.5294%" y="421" width="0.2353%" height="15" fill="rgb(235,35,32)" fg:x="406" fg:w="1"/><text x="95.7794%" y="431.50"></text></g><g><title>`0x7FF9F3A62079 (1 samples, 0.24%)</title><rect x="95.5294%" y="405" width="0.2353%" height="15" fill="rgb(218,68,31)" fg:x="406" fg:w="1"/><text x="95.7794%" y="415.50"></text></g><g><title>`0x7FF9F3A61A22 (1 samples, 0.24%)</title><rect x="95.5294%" y="389" width="0.2353%" height="15" fill="rgb(207,120,37)" fg:x="406" fg:w="1"/><text x="95.7794%" y="399.50"></text></g><g><title>`0x7FF9F0FDCC53 (1 samples, 0.24%)</title><rect x="95.7647%" y="485" width="0.2353%" height="15" fill="rgb(227,98,0)" fg:x="407" fg:w="1"/><text x="96.0147%" y="495.50"></text></g><g><title>`0x7FF9F0FDD903 (1 samples, 0.24%)</title><rect x="95.7647%" y="469" width="0.2353%" height="15" fill="rgb(207,7,3)" fg:x="407" fg:w="1"/><text x="96.0147%" y="479.50"></text></g><g><title>`0x7FF9F0FDC5EA (1 samples, 0.24%)</title><rect x="95.7647%" y="453" width="0.2353%" height="15" fill="rgb(206,98,19)" fg:x="407" fg:w="1"/><text x="96.0147%" y="463.50"></text></g><g><title>`0x7FF9F0FB0FC6 (1 samples, 0.24%)</title><rect x="95.7647%" y="437" width="0.2353%" height="15" fill="rgb(217,5,26)" fg:x="407" fg:w="1"/><text x="96.0147%" y="447.50"></text></g><g><title>`0x7FF9F0FB0DDB (1 samples, 0.24%)</title><rect x="95.7647%" y="421" width="0.2353%" height="15" fill="rgb(235,190,38)" fg:x="407" fg:w="1"/><text x="96.0147%" y="431.50"></text></g><g><title>`0x7FF9F0FDC7B2 (1 samples, 0.24%)</title><rect x="95.7647%" y="405" width="0.2353%" height="15" fill="rgb(247,86,24)" fg:x="407" fg:w="1"/><text x="96.0147%" y="415.50"></text></g><g><title>`0x7FF9F0FDFE65 (1 samples, 0.24%)</title><rect x="95.7647%" y="389" width="0.2353%" height="15" fill="rgb(205,101,16)" fg:x="407" fg:w="1"/><text x="96.0147%" y="399.50"></text></g><g><title>`0x7FF9F3AD0344 (1 samples, 0.24%)</title><rect x="95.7647%" y="373" width="0.2353%" height="15" fill="rgb(246,168,33)" fg:x="407" fg:w="1"/><text x="96.0147%" y="383.50"></text></g><g><title>`0x7FF9F3B05DA2 (11 samples, 2.59%)</title><rect x="93.6471%" y="629" width="2.5882%" height="15" fill="rgb(231,114,1)" fg:x="398" fg:w="11"/><text x="93.8971%" y="639.50">`0..</text></g><g><title>`0x7FF9F3A5A24A (11 samples, 2.59%)</title><rect x="93.6471%" y="613" width="2.5882%" height="15" fill="rgb(207,184,53)" fg:x="398" fg:w="11"/><text x="93.8971%" y="623.50">`0..</text></g><g><title>`0x7FF9F3A48C9C (11 samples, 2.59%)</title><rect x="93.6471%" y="597" width="2.5882%" height="15" fill="rgb(224,95,51)" fg:x="398" fg:w="11"/><text x="93.8971%" y="607.50">`0..</text></g><g><title>`0x7FF9F3A58930 (6 samples, 1.41%)</title><rect x="94.8235%" y="581" width="1.4118%" height="15" fill="rgb(212,188,45)" fg:x="403" fg:w="6"/><text x="95.0735%" y="591.50"></text></g><g><title>`0x7FF9F3A5D61D (6 samples, 1.41%)</title><rect x="94.8235%" y="565" width="1.4118%" height="15" fill="rgb(223,154,38)" fg:x="403" fg:w="6"/><text x="95.0735%" y="575.50"></text></g><g><title>`0x7FF9F3A9CE10 (6 samples, 1.41%)</title><rect x="94.8235%" y="549" width="1.4118%" height="15" fill="rgb(251,22,52)" fg:x="403" fg:w="6"/><text x="95.0735%" y="559.50"></text></g><g><title>`0x7FF9F3A9CD9E (6 samples, 1.41%)</title><rect x="94.8235%" y="533" width="1.4118%" height="15" fill="rgb(229,209,22)" fg:x="403" fg:w="6"/><text x="95.0735%" y="543.50"></text></g><g><title>`0x7FF9F3A9CFED (6 samples, 1.41%)</title><rect x="94.8235%" y="517" width="1.4118%" height="15" fill="rgb(234,138,34)" fg:x="403" fg:w="6"/><text x="95.0735%" y="527.50"></text></g><g><title>`0x7FF9F3A5868F (6 samples, 1.41%)</title><rect x="94.8235%" y="501" width="1.4118%" height="15" fill="rgb(212,95,11)" fg:x="403" fg:w="6"/><text x="95.0735%" y="511.50"></text></g><g><title>`0x7FF9F0FDCC70 (1 samples, 0.24%)</title><rect x="96.0000%" y="485" width="0.2353%" height="15" fill="rgb(240,179,47)" fg:x="408" fg:w="1"/><text x="96.2500%" y="495.50"></text></g><g><title>`0x7FF9F0FDD42E (1 samples, 0.24%)</title><rect x="96.0000%" y="469" width="0.2353%" height="15" fill="rgb(240,163,11)" fg:x="408" fg:w="1"/><text x="96.2500%" y="479.50"></text></g><g><title>`0x7FF9F1019068 (1 samples, 0.24%)</title><rect x="96.0000%" y="453" width="0.2353%" height="15" fill="rgb(236,37,12)" fg:x="408" fg:w="1"/><text x="96.2500%" y="463.50"></text></g><g><title>`0x7FF9F3A614D0 (1 samples, 0.24%)</title><rect x="96.0000%" y="437" width="0.2353%" height="15" fill="rgb(232,164,16)" fg:x="408" fg:w="1"/><text x="96.2500%" y="447.50"></text></g><g><title>`0x7FF9F3A621BA (1 samples, 0.24%)</title><rect x="96.0000%" y="421" width="0.2353%" height="15" fill="rgb(244,205,15)" fg:x="408" fg:w="1"/><text x="96.2500%" y="431.50"></text></g><g><title>`0x7FF9F3A62047 (1 samples, 0.24%)</title><rect x="96.0000%" y="405" width="0.2353%" height="15" fill="rgb(223,117,47)" fg:x="408" fg:w="1"/><text x="96.2500%" y="415.50"></text></g><g><title>`0x7FF9F3AD26A4 (1 samples, 0.24%)</title><rect x="96.0000%" y="389" width="0.2353%" height="15" fill="rgb(244,107,35)" fg:x="408" fg:w="1"/><text x="96.2500%" y="399.50"></text></g><g><title>`0x7FF9F3B05E4C (1 samples, 0.24%)</title><rect x="96.2353%" y="629" width="0.2353%" height="15" fill="rgb(205,140,8)" fg:x="409" fg:w="1"/><text x="96.4853%" y="639.50"></text></g><g><title>`0x7FF9F3A485DC (1 samples, 0.24%)</title><rect x="96.2353%" y="613" width="0.2353%" height="15" fill="rgb(228,84,46)" fg:x="409" fg:w="1"/><text x="96.4853%" y="623.50"></text></g><g><title>`0x7FF9F3A5B8D1 (1 samples, 0.24%)</title><rect x="96.2353%" y="597" width="0.2353%" height="15" fill="rgb(254,188,9)" fg:x="409" fg:w="1"/><text x="96.4853%" y="607.50"></text></g><g><title>`0x7FF9F3A5B9E7 (1 samples, 0.24%)</title><rect x="96.2353%" y="581" width="0.2353%" height="15" fill="rgb(206,112,54)" fg:x="409" fg:w="1"/><text x="96.4853%" y="591.50"></text></g><g><title>`0x7FF9F3A530BA (1 samples, 0.24%)</title><rect x="96.2353%" y="565" width="0.2353%" height="15" fill="rgb(216,84,49)" fg:x="409" fg:w="1"/><text x="96.4853%" y="575.50"></text></g><g><title>`0x7FF9F3A9A614 (1 samples, 0.24%)</title><rect x="96.2353%" y="549" width="0.2353%" height="15" fill="rgb(214,194,35)" fg:x="409" fg:w="1"/><text x="96.4853%" y="559.50"></text></g><g><title>`0x7FF9F3ACF654 (1 samples, 0.24%)</title><rect x="96.2353%" y="533" width="0.2353%" height="15" fill="rgb(249,28,3)" fg:x="409" fg:w="1"/><text x="96.4853%" y="543.50"></text></g><g><title>`0x7FF9F3B05E5F (1 samples, 0.24%)</title><rect x="96.4706%" y="629" width="0.2353%" height="15" fill="rgb(222,56,52)" fg:x="410" fg:w="1"/><text x="96.7206%" y="639.50"></text></g><g><title>`0x7FF9F3A398FB (1 samples, 0.24%)</title><rect x="96.4706%" y="613" width="0.2353%" height="15" fill="rgb(245,217,50)" fg:x="410" fg:w="1"/><text x="96.7206%" y="623.50"></text></g><g><title>`0x7FF9F3ACEE94 (1 samples, 0.24%)</title><rect x="96.4706%" y="597" width="0.2353%" height="15" fill="rgb(213,201,24)" fg:x="410" fg:w="1"/><text x="96.7206%" y="607.50"></text></g><g><title>`0x7FF9F3A54666 (1 samples, 0.24%)</title><rect x="96.7059%" y="613" width="0.2353%" height="15" fill="rgb(248,116,28)" fg:x="411" fg:w="1"/><text x="96.9559%" y="623.50"></text></g><g><title>`0x7FF9F3A5C244 (1 samples, 0.24%)</title><rect x="96.9412%" y="549" width="0.2353%" height="15" fill="rgb(219,72,43)" fg:x="412" fg:w="1"/><text x="97.1912%" y="559.50"></text></g><g><title>`0x7FF9F3A5C0BA (1 samples, 0.24%)</title><rect x="96.9412%" y="533" width="0.2353%" height="15" fill="rgb(209,138,14)" fg:x="412" fg:w="1"/><text x="97.1912%" y="543.50"></text></g><g><title>`0x7FF9F3A5C4BC (1 samples, 0.24%)</title><rect x="96.9412%" y="517" width="0.2353%" height="15" fill="rgb(222,18,33)" fg:x="412" fg:w="1"/><text x="97.1912%" y="527.50"></text></g><g><title>`0x7FF9F3ACF154 (1 samples, 0.24%)</title><rect x="96.9412%" y="501" width="0.2353%" height="15" fill="rgb(213,199,7)" fg:x="412" fg:w="1"/><text x="97.1912%" y="511.50"></text></g><g><title>`0x7FF9F3A54531 (1 samples, 0.24%)</title><rect x="97.1765%" y="533" width="0.2353%" height="15" fill="rgb(250,110,10)" fg:x="413" fg:w="1"/><text x="97.4265%" y="543.50"></text></g><g><title>`0x7FF9F3A5ADFE (1 samples, 0.24%)</title><rect x="97.1765%" y="517" width="0.2353%" height="15" fill="rgb(248,123,6)" fg:x="413" fg:w="1"/><text x="97.4265%" y="527.50"></text></g><g><title>`0x7FF9F3A54E61 (1 samples, 0.24%)</title><rect x="97.4118%" y="501" width="0.2353%" height="15" fill="rgb(206,91,31)" fg:x="414" fg:w="1"/><text x="97.6618%" y="511.50"></text></g><g><title>`0x7FF9F3A497DA (1 samples, 0.24%)</title><rect x="97.4118%" y="485" width="0.2353%" height="15" fill="rgb(211,154,13)" fg:x="414" fg:w="1"/><text x="97.6618%" y="495.50"></text></g><g><title>`0x7FF9F3A498C3 (1 samples, 0.24%)</title><rect x="97.4118%" y="469" width="0.2353%" height="15" fill="rgb(225,148,7)" fg:x="414" fg:w="1"/><text x="97.6618%" y="479.50"></text></g><g><title>`0x7FF9F3A558B4 (4 samples, 0.94%)</title><rect x="96.9412%" y="581" width="0.9412%" height="15" fill="rgb(220,160,43)" fg:x="412" fg:w="4"/><text x="97.1912%" y="591.50"></text></g><g><title>`0x7FF9F3A5CE19 (4 samples, 0.94%)</title><rect x="96.9412%" y="565" width="0.9412%" height="15" fill="rgb(213,52,39)" fg:x="412" fg:w="4"/><text x="97.1912%" y="575.50"></text></g><g><title>`0x7FF9F3A5C3E8 (3 samples, 0.71%)</title><rect x="97.1765%" y="549" width="0.7059%" height="15" fill="rgb(243,137,7)" fg:x="413" fg:w="3"/><text x="97.4265%" y="559.50"></text></g><g><title>`0x7FF9F3A546AB (2 samples, 0.47%)</title><rect x="97.4118%" y="533" width="0.4706%" height="15" fill="rgb(230,79,13)" fg:x="414" fg:w="2"/><text x="97.6618%" y="543.50"></text></g><g><title>`0x7FF9F3A548F6 (2 samples, 0.47%)</title><rect x="97.4118%" y="517" width="0.4706%" height="15" fill="rgb(247,105,23)" fg:x="414" fg:w="2"/><text x="97.6618%" y="527.50"></text></g><g><title>`0x7FF9F3A558B4 (1 samples, 0.24%)</title><rect x="97.6471%" y="501" width="0.2353%" height="15" fill="rgb(223,179,41)" fg:x="415" fg:w="1"/><text x="97.8971%" y="511.50"></text></g><g><title>`0x7FF9F3A5CE19 (1 samples, 0.24%)</title><rect x="97.6471%" y="485" width="0.2353%" height="15" fill="rgb(218,9,34)" fg:x="415" fg:w="1"/><text x="97.8971%" y="495.50"></text></g><g><title>`0x7FF9F3A5C3E8 (1 samples, 0.24%)</title><rect x="97.6471%" y="469" width="0.2353%" height="15" fill="rgb(222,106,8)" fg:x="415" fg:w="1"/><text x="97.8971%" y="479.50"></text></g><g><title>`0x7FF9F3A54739 (1 samples, 0.24%)</title><rect x="97.6471%" y="453" width="0.2353%" height="15" fill="rgb(211,220,0)" fg:x="415" fg:w="1"/><text x="97.8971%" y="463.50"></text></g><g><title>`0x7FF9F3AA2E8F (1 samples, 0.24%)</title><rect x="97.6471%" y="437" width="0.2353%" height="15" fill="rgb(229,52,16)" fg:x="415" fg:w="1"/><text x="97.8971%" y="447.50"></text></g><g><title>`0x7FF9F3A64D34 (1 samples, 0.24%)</title><rect x="97.6471%" y="421" width="0.2353%" height="15" fill="rgb(212,155,18)" fg:x="415" fg:w="1"/><text x="97.8971%" y="431.50"></text></g><g><title>`0x7FF9F3A64ED6 (1 samples, 0.24%)</title><rect x="97.6471%" y="405" width="0.2353%" height="15" fill="rgb(242,21,14)" fg:x="415" fg:w="1"/><text x="97.8971%" y="415.50"></text></g><g><title>`0x7FF9F3AD1BC4 (1 samples, 0.24%)</title><rect x="97.6471%" y="389" width="0.2353%" height="15" fill="rgb(222,19,48)" fg:x="415" fg:w="1"/><text x="97.8971%" y="399.50"></text></g><g><title>`0x7FF9F3B060D2 (6 samples, 1.41%)</title><rect x="96.7059%" y="629" width="1.4118%" height="15" fill="rgb(232,45,27)" fg:x="411" fg:w="6"/><text x="96.9559%" y="639.50"></text></g><g><title>`0x7FF9F3A546AB (5 samples, 1.18%)</title><rect x="96.9412%" y="613" width="1.1765%" height="15" fill="rgb(249,103,42)" fg:x="412" fg:w="5"/><text x="97.1912%" y="623.50"></text></g><g><title>`0x7FF9F3A548F6 (5 samples, 1.18%)</title><rect x="96.9412%" y="597" width="1.1765%" height="15" fill="rgb(246,81,33)" fg:x="412" fg:w="5"/><text x="97.1912%" y="607.50"></text></g><g><title>`0x7FF9F3A558DB (1 samples, 0.24%)</title><rect x="97.8824%" y="581" width="0.2353%" height="15" fill="rgb(252,33,42)" fg:x="416" fg:w="1"/><text x="98.1324%" y="591.50"></text></g><g><title>`0x7FF9F3AA2E8F (1 samples, 0.24%)</title><rect x="97.8824%" y="565" width="0.2353%" height="15" fill="rgb(209,212,41)" fg:x="416" fg:w="1"/><text x="98.1324%" y="575.50"></text></g><g><title>`0x7FF9F3A64D34 (1 samples, 0.24%)</title><rect x="97.8824%" y="549" width="0.2353%" height="15" fill="rgb(207,154,6)" fg:x="416" fg:w="1"/><text x="98.1324%" y="559.50"></text></g><g><title>`0x7FF9F3A64ED6 (1 samples, 0.24%)</title><rect x="97.8824%" y="533" width="0.2353%" height="15" fill="rgb(223,64,47)" fg:x="416" fg:w="1"/><text x="98.1324%" y="543.50"></text></g><g><title>`0x7FF9F3AD1BC4 (1 samples, 0.24%)</title><rect x="97.8824%" y="517" width="0.2353%" height="15" fill="rgb(211,161,38)" fg:x="416" fg:w="1"/><text x="98.1324%" y="527.50"></text></g><g><title>`0x7FF9F3B060DA (1 samples, 0.24%)</title><rect x="98.1176%" y="629" width="0.2353%" height="15" fill="rgb(219,138,40)" fg:x="417" fg:w="1"/><text x="98.3676%" y="639.50"></text></g><g><title>`0x7FF9F3A5A090 (1 samples, 0.24%)</title><rect x="98.1176%" y="613" width="0.2353%" height="15" fill="rgb(241,228,46)" fg:x="417" fg:w="1"/><text x="98.3676%" y="623.50"></text></g><g><title>`0x7FF9F3A40E7B (1 samples, 0.24%)</title><rect x="98.1176%" y="597" width="0.2353%" height="15" fill="rgb(223,209,38)" fg:x="417" fg:w="1"/><text x="98.3676%" y="607.50"></text></g><g><title>`0x7FF9F3A53CCB (1 samples, 0.24%)</title><rect x="98.1176%" y="581" width="0.2353%" height="15" fill="rgb(236,164,45)" fg:x="417" fg:w="1"/><text x="98.3676%" y="591.50"></text></g><g><title>`0x7FF9F3B0611B (1 samples, 0.24%)</title><rect x="98.3529%" y="629" width="0.2353%" height="15" fill="rgb(231,15,5)" fg:x="418" fg:w="1"/><text x="98.6029%" y="639.50"></text></g><g><title>`0x7FF9F3A5D5D1 (1 samples, 0.24%)</title><rect x="98.3529%" y="613" width="0.2353%" height="15" fill="rgb(252,35,15)" fg:x="418" fg:w="1"/><text x="98.6029%" y="623.50"></text></g><g><title>`0x7FF9F3A5E7F9 (1 samples, 0.24%)</title><rect x="98.3529%" y="597" width="0.2353%" height="15" fill="rgb(248,181,18)" fg:x="418" fg:w="1"/><text x="98.6029%" y="607.50"></text></g><g><title>`0x7FF9F3A5E7DF (1 samples, 0.24%)</title><rect x="98.3529%" y="581" width="0.2353%" height="15" fill="rgb(233,39,42)" fg:x="418" fg:w="1"/><text x="98.6029%" y="591.50"></text></g><g><title>`0x7FF9F3A5E8A3 (1 samples, 0.24%)</title><rect x="98.3529%" y="565" width="0.2353%" height="15" fill="rgb(238,110,33)" fg:x="418" fg:w="1"/><text x="98.6029%" y="575.50"></text></g><g><title>`0x7FF9F3A5EA4F (1 samples, 0.24%)</title><rect x="98.3529%" y="549" width="0.2353%" height="15" fill="rgb(233,195,10)" fg:x="418" fg:w="1"/><text x="98.6029%" y="559.50"></text></g><g><title>`0x7FF9CF17FFB1 (1 samples, 0.24%)</title><rect x="98.5882%" y="549" width="0.2353%" height="15" fill="rgb(254,105,3)" fg:x="419" fg:w="1"/><text x="98.8382%" y="559.50"></text></g><g><title>`0x7FF9CF1803BC (1 samples, 0.24%)</title><rect x="98.5882%" y="533" width="0.2353%" height="15" fill="rgb(221,225,9)" fg:x="419" fg:w="1"/><text x="98.8382%" y="543.50"></text></g><g><title>`0x7FF9F0809177 (1 samples, 0.24%)</title><rect x="98.8235%" y="549" width="0.2353%" height="15" fill="rgb(224,227,45)" fg:x="420" fg:w="1"/><text x="99.0735%" y="559.50"></text></g><g><title>`0x7FF9F08035B8 (1 samples, 0.24%)</title><rect x="98.8235%" y="533" width="0.2353%" height="15" fill="rgb(229,198,43)" fg:x="420" fg:w="1"/><text x="99.0735%" y="543.50"></text></g><g><title>`0x7FF9F0803835 (1 samples, 0.24%)</title><rect x="98.8235%" y="517" width="0.2353%" height="15" fill="rgb(206,209,35)" fg:x="420" fg:w="1"/><text x="99.0735%" y="527.50"></text></g><g><title>`0x7FF9F080394F (1 samples, 0.24%)</title><rect x="98.8235%" y="501" width="0.2353%" height="15" fill="rgb(245,195,53)" fg:x="420" fg:w="1"/><text x="99.0735%" y="511.50"></text></g><g><title>`0x7FF9F080557F (1 samples, 0.24%)</title><rect x="98.8235%" y="485" width="0.2353%" height="15" fill="rgb(240,92,26)" fg:x="420" fg:w="1"/><text x="99.0735%" y="495.50"></text></g><g><title>`0x7FF9F3ACED34 (1 samples, 0.24%)</title><rect x="98.8235%" y="469" width="0.2353%" height="15" fill="rgb(207,40,23)" fg:x="420" fg:w="1"/><text x="99.0735%" y="479.50"></text></g><g><title>`0x7FF9F3A9CD9E (4 samples, 0.94%)</title><rect x="98.5882%" y="597" width="0.9412%" height="15" fill="rgb(223,111,35)" fg:x="419" fg:w="4"/><text x="98.8382%" y="607.50"></text></g><g><title>`0x7FF9F3A9CFED (4 samples, 0.94%)</title><rect x="98.5882%" y="581" width="0.9412%" height="15" fill="rgb(229,147,28)" fg:x="419" fg:w="4"/><text x="98.8382%" y="591.50"></text></g><g><title>`0x7FF9F3A5868F (4 samples, 0.94%)</title><rect x="98.5882%" y="565" width="0.9412%" height="15" fill="rgb(211,29,28)" fg:x="419" fg:w="4"/><text x="98.8382%" y="575.50"></text></g><g><title>`0x7FF9F24A4719 (2 samples, 0.47%)</title><rect x="99.0588%" y="549" width="0.4706%" height="15" fill="rgb(228,72,33)" fg:x="421" fg:w="2"/><text x="99.3088%" y="559.50"></text></g><g><title>`0x7FF9F24A47F8 (2 samples, 0.47%)</title><rect x="99.0588%" y="533" width="0.4706%" height="15" fill="rgb(205,214,31)" fg:x="421" fg:w="2"/><text x="99.3088%" y="543.50"></text></g><g><title>`0x7FF9F24B40D5 (2 samples, 0.47%)</title><rect x="99.0588%" y="517" width="0.4706%" height="15" fill="rgb(224,111,15)" fg:x="421" fg:w="2"/><text x="99.3088%" y="527.50"></text></g><g><title>`0x7FF9F3A5F620 (2 samples, 0.47%)</title><rect x="99.0588%" y="501" width="0.4706%" height="15" fill="rgb(253,21,26)" fg:x="421" fg:w="2"/><text x="99.3088%" y="511.50"></text></g><g><title>`0x7FF9F3A5F705 (2 samples, 0.47%)</title><rect x="99.0588%" y="485" width="0.4706%" height="15" fill="rgb(245,139,43)" fg:x="421" fg:w="2"/><text x="99.3088%" y="495.50"></text></g><g><title>`0x7FF9F3AD26A4 (2 samples, 0.47%)</title><rect x="99.0588%" y="469" width="0.4706%" height="15" fill="rgb(252,170,7)" fg:x="421" fg:w="2"/><text x="99.3088%" y="479.50"></text></g><g><title>`0x7FF9F2957C2F (1 samples, 0.24%)</title><rect x="99.5294%" y="533" width="0.2353%" height="15" fill="rgb(231,118,14)" fg:x="423" fg:w="1"/><text x="99.7794%" y="543.50"></text></g><g><title>`0x7FF9F29739A2 (1 samples, 0.24%)</title><rect x="99.5294%" y="517" width="0.2353%" height="15" fill="rgb(238,83,0)" fg:x="423" fg:w="1"/><text x="99.7794%" y="527.50"></text></g><g><title>`0x7FF9F2973B20 (1 samples, 0.24%)</title><rect x="99.5294%" y="501" width="0.2353%" height="15" fill="rgb(221,39,39)" fg:x="423" fg:w="1"/><text x="99.7794%" y="511.50"></text></g><g><title>`0x7FF9F296CD6B (1 samples, 0.24%)</title><rect x="99.5294%" y="485" width="0.2353%" height="15" fill="rgb(222,119,46)" fg:x="423" fg:w="1"/><text x="99.7794%" y="495.50"></text></g><g><title>`0x7FF9F296CB80 (1 samples, 0.24%)</title><rect x="99.5294%" y="469" width="0.2353%" height="15" fill="rgb(222,165,49)" fg:x="423" fg:w="1"/><text x="99.7794%" y="479.50"></text></g><g><title>`0x7FF9F3A6CD49 (1 samples, 0.24%)</title><rect x="99.5294%" y="453" width="0.2353%" height="15" fill="rgb(219,113,52)" fg:x="423" fg:w="1"/><text x="99.7794%" y="463.50"></text></g><g><title>`0x7FF9F3A6FA28 (1 samples, 0.24%)</title><rect x="99.5294%" y="437" width="0.2353%" height="15" fill="rgb(214,7,15)" fg:x="423" fg:w="1"/><text x="99.7794%" y="447.50"></text></g><g><title>`0x7FF9F3A79FCB (1 samples, 0.24%)</title><rect x="99.5294%" y="421" width="0.2353%" height="15" fill="rgb(235,32,4)" fg:x="423" fg:w="1"/><text x="99.7794%" y="431.50"></text></g><g><title>`0x7FF9F3A79531 (1 samples, 0.24%)</title><rect x="99.5294%" y="405" width="0.2353%" height="15" fill="rgb(238,90,54)" fg:x="423" fg:w="1"/><text x="99.7794%" y="415.50"></text></g><g><title>`0x7FF9F3A78E0C (1 samples, 0.24%)</title><rect x="99.5294%" y="389" width="0.2353%" height="15" fill="rgb(213,208,19)" fg:x="423" fg:w="1"/><text x="99.7794%" y="399.50"></text></g><g><title>`0x7FF9F3A79789 (1 samples, 0.24%)</title><rect x="99.5294%" y="373" width="0.2353%" height="15" fill="rgb(233,156,4)" fg:x="423" fg:w="1"/><text x="99.7794%" y="383.50"></text></g><g><title>`0x7FF9F3A623EA (1 samples, 0.24%)</title><rect x="99.5294%" y="357" width="0.2353%" height="15" fill="rgb(207,194,5)" fg:x="423" fg:w="1"/><text x="99.7794%" y="367.50"></text></g><g><title>`0x7FF9F3AAF462 (1 samples, 0.24%)</title><rect x="99.5294%" y="341" width="0.2353%" height="15" fill="rgb(206,111,30)" fg:x="423" fg:w="1"/><text x="99.7794%" y="351.50"></text></g><g><title>`0x7FF9F3ACEE94 (1 samples, 0.24%)</title><rect x="99.5294%" y="325" width="0.2353%" height="15" fill="rgb(243,70,54)" fg:x="423" fg:w="1"/><text x="99.7794%" y="335.50"></text></g><g><title>all (425 samples, 100%)</title><rect x="0.0000%" y="693" width="100.0000%" height="15" fill="rgb(242,28,8)" fg:x="0" fg:w="425"/><text x="0.2500%" y="703.50"></text></g><g><title>`0x7FF9F3AA3D7E (33 samples, 7.76%)</title><rect x="92.2353%" y="677" width="7.7647%" height="15" fill="rgb(219,106,18)" fg:x="392" fg:w="33"/><text x="92.4853%" y="687.50">`0x7FF9F3AA..</text></g><g><title>`0x7FF9F3AA3E53 (33 samples, 7.76%)</title><rect x="92.2353%" y="661" width="7.7647%" height="15" fill="rgb(244,222,10)" fg:x="392" fg:w="33"/><text x="92.4853%" y="671.50">`0x7FF9F3AA..</text></g><g><title>`0x7FF9F3AF9A00 (33 samples, 7.76%)</title><rect x="92.2353%" y="645" width="7.7647%" height="15" fill="rgb(236,179,52)" fg:x="392" fg:w="33"/><text x="92.4853%" y="655.50">`0x7FF9F3AF..</text></g><g><title>`0x7FF9F3B06258 (6 samples, 1.41%)</title><rect x="98.5882%" y="629" width="1.4118%" height="15" fill="rgb(213,23,39)" fg:x="419" fg:w="6"/><text x="98.8382%" y="639.50"></text></g><g><title>`0x7FF9F3A9CE10 (6 samples, 1.41%)</title><rect x="98.5882%" y="613" width="1.4118%" height="15" fill="rgb(238,48,10)" fg:x="419" fg:w="6"/><text x="98.8382%" y="623.50"></text></g><g><title>`0x7FF9F3A9CE10 (2 samples, 0.47%)</title><rect x="99.5294%" y="597" width="0.4706%" height="15" fill="rgb(251,196,23)" fg:x="423" fg:w="2"/><text x="99.7794%" y="607.50"></text></g><g><title>`0x7FF9F3A9CD9E (2 samples, 0.47%)</title><rect x="99.5294%" y="581" width="0.4706%" height="15" fill="rgb(250,152,24)" fg:x="423" fg:w="2"/><text x="99.7794%" y="591.50"></text></g><g><title>`0x7FF9F3A9CFED (2 samples, 0.47%)</title><rect x="99.5294%" y="565" width="0.4706%" height="15" fill="rgb(209,150,17)" fg:x="423" fg:w="2"/><text x="99.7794%" y="575.50"></text></g><g><title>`0x7FF9F3A5868F (2 samples, 0.47%)</title><rect x="99.5294%" y="549" width="0.4706%" height="15" fill="rgb(234,202,34)" fg:x="423" fg:w="2"/><text x="99.7794%" y="559.50"></text></g><g><title>`0x7FF9F2D9777A (1 samples, 0.24%)</title><rect x="99.7647%" y="533" width="0.2353%" height="15" fill="rgb(253,148,53)" fg:x="424" fg:w="1"/><text x="100.0147%" y="543.50"></text></g><g><title>`0x7FF9F2D98495 (1 samples, 0.24%)</title><rect x="99.7647%" y="517" width="0.2353%" height="15" fill="rgb(218,129,16)" fg:x="424" fg:w="1"/><text x="100.0147%" y="527.50"></text></g><g><title>`0x7FF9F2D927DC (1 samples, 0.24%)</title><rect x="99.7647%" y="501" width="0.2353%" height="15" fill="rgb(216,85,19)" fg:x="424" fg:w="1"/><text x="100.0147%" y="511.50"></text></g><g><title>`0x7FF9F2D928C9 (1 samples, 0.24%)</title><rect x="99.7647%" y="485" width="0.2353%" height="15" fill="rgb(235,228,7)" fg:x="424" fg:w="1"/><text x="100.0147%" y="495.50"></text></g><g><title>`0x7FF9F2D92FB4 (1 samples, 0.24%)</title><rect x="99.7647%" y="469" width="0.2353%" height="15" fill="rgb(245,175,0)" fg:x="424" fg:w="1"/><text x="100.0147%" y="479.50"></text></g><g><title>`0x7FF9F3A5F620 (1 samples, 0.24%)</title><rect x="99.7647%" y="453" width="0.2353%" height="15" fill="rgb(208,168,36)" fg:x="424" fg:w="1"/><text x="100.0147%" y="463.50"></text></g><g><title>`0x7FF9F3A5F705 (1 samples, 0.24%)</title><rect x="99.7647%" y="437" width="0.2353%" height="15" fill="rgb(246,171,24)" fg:x="424" fg:w="1"/><text x="100.0147%" y="447.50"></text></g><g><title>`0x7FF9F3AD26A4 (1 samples, 0.24%)</title><rect x="99.7647%" y="421" width="0.2353%" height="15" fill="rgb(215,142,24)" fg:x="424" fg:w="1"/><text x="100.0147%" y="431.50"></text></g></svg></svg>